<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Weilin&#39;s Blog</title>
  
  
  <link href="https://weilin1205.github.io/atom.xml" rel="self"/>
  
  <link href="https://weilin1205.github.io/"/>
  <updated>2024-06-11T10:01:43.364Z</updated>
  <id>https://weilin1205.github.io/</id>
  
  <author>
    <name>Weilin Wen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UVa 10035 - Primary Arithmetic</title>
    <link href="https://weilin1205.github.io/posts/uva10035.html"/>
    <id>https://weilin1205.github.io/posts/uva10035.html</id>
    <published>2024-05-06T11:33:03.000Z</published>
    <updated>2024-06-11T10:01:43.364Z</updated>
    
    <content type="html"><![CDATA[<a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a><h1>UVa 10035 - Primary Arithmetic</h1><div class="row">    <embed src="https://onlinejudge.org/external/100/10035.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><ul><li>每列會給<strong>兩個數字</strong>，數字的長度不會超過10位數。且兩個數字的<strong>長度不一定會一樣</strong>。</li><li>輸入 0 0 時，表示結束。</li><li>當 <strong>進位總數量(count)等於0</strong>，輸出<code>No carry operation.</code>。</li><li>當 <strong>進位總數量(count)等於1</strong>，輸出<code>1 carry operation.</code>。</li><li>當 <strong>進位總數量(count)等於n (n&gt;1)</strong>，輸出<code>n carry operations.</code>。</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li>專注於 <code>當前進位(carry)</code> 與 <code>進位總數量(count)</code> 的計算上。</li><li><code>當前進位(carry)</code> 使用判斷式 <code>a%10 + b%10 + carry &gt;= 10</code> 來進行判斷，<code>a%10、b%10</code> 表示分別取 a 與 b 的尾數，<code>+ carry</code> 表示 加 上一位的 進位(carry，carry 只會是 0 or 1)。</li><li>若判斷式為 <strong>true</strong> 則 <code>carry=1</code> 且 <code>count++</code>，若 <strong>false</strong> 則 <code>carry=0</code>。</li><li>最後判斷完成後使用 <code>a/=10、b/=10</code> 拋棄 a 與 b 的尾數。</li></ul><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">123 456</span><br><span class="line">555 555</span><br><span class="line">123 594</span><br><span class="line">00</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">No carry operation.</span><br><span class="line">3 carry operations.</span><br><span class="line">1 carry operation.</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10035.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10035.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/10035"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>, carry=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a || b) &#123;  <span class="comment">//當a或b有一數等於0便停止計算</span></span><br><span class="line">            <span class="keyword">if</span>(a%<span class="number">10</span>+b%<span class="number">10</span>+carry &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">                carry=<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                carry=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a/=<span class="number">10</span>;</span><br><span class="line">            b/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;No carry operation.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(count==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;1 carry operation.\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;count&lt;&lt;<span class="string">&quot; carry operations.\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a>]]></content>
    
    
    <summary type="html">🎈UVa 10035 - Primary Arithmetic</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
    <category term="CPE" scheme="https://weilin1205.github.io/tags/CPE/"/>
    
  </entry>
  
  <entry>
    <title>Install and Use Docker on Ubuntu 22.04</title>
    <link href="https://weilin1205.github.io/posts/docker.html"/>
    <id>https://weilin1205.github.io/posts/docker.html</id>
    <published>2024-03-27T13:52:04.000Z</published>
    <updated>2024-03-28T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Install and Use Docker on Ubuntu 22.04</h1><h2 id="Step-1-—-Installing-Docker">Step 1 — Installing Docker</h2><ol><li>First, update your system by running</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><ol start="2"><li>Next, install a few prerequisite packages which let apt use packages over HTTPS:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><ol start="3"><li>Then add the GPG key for the official Docker repository to your system:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure><ol start="4"><li>Add the Docker repository to APT sources:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure><ol start="5"><li>Update your existing list of packages again for the addition to be recognized:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><ol start="6"><li>Make sure you are about to install from the Docker repo instead of the default Ubuntu repo:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache policy docker-ce</span><br></pre></td></tr></table></figure><ol start="7"><li>Finally, install Docker:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-ce</span><br></pre></td></tr></table></figure><ol start="8"><li>Docker should now be installed, the daemon started, and the process enabled to start on boot. Check that it’s running:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure><h2 id="Step-2-—-Working-with-Docker-Images">Step 2 — Working with Docker Images</h2><ol><li>To check whether you can access and download images from Docker Hub, type:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><ol start="2"><li>You can search for images available on Docker Hub by using the docker command with the search subcommand. For example, to search for the Ubuntu image, type:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search ubuntu</span><br></pre></td></tr></table></figure><ol start="3"><li>Execute the following command to download the official ubuntu image to your computer:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure><ol start="4"><li>To see the images that have been downloaded to your computer, type:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="Step-3-—-Running-a-Docker-Container">Step 3 — Running a Docker Container</h2><ul><li>Reference</li><li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-22-04#step-8-pushing-docker-images-to-a-docker-repository">How-to-install-and-use-docker-on-ubuntu-22-04</a></li></ul>]]></content>
    
    
    <summary type="html">🚢 Install and Use Docker on Ubuntu 22.04</summary>
    
    
    
    <category term="Docker" scheme="https://weilin1205.github.io/categories/Docker/"/>
    
    
    <category term="Linux" scheme="https://weilin1205.github.io/tags/Linux/"/>
    
    <category term="Docker" scheme="https://weilin1205.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>ASVD: Activation-aware Singular Value Decomposition for Compressing Large Language Models</title>
    <link href="https://weilin1205.github.io/posts/ASVD.html"/>
    <id>https://weilin1205.github.io/posts/ASVD.html</id>
    <published>2024-03-20T04:55:04.000Z</published>
    <updated>2024-05-27T20:54:10.971Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 您的密碼不正確, 請再試試!" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e56bc9f386afaeb91337d2175a9b08ab26fafbade4df1e8bd312727a0fbdcafb">558509309b2bd156ab899101048d8d48991b067711ca59e45455e491fe07de3f973eac1bdb88204e1cfbf6636c872ce11c7dac9edff306be59f54eb056fccdde652845982222519c22cd23cd653c6a484c0cbc4a7b77e0e47ddea508a83142bea2c30c230c367a9360b4664767c4b067f4d745f2201cf4741ba82f8d907ff07eaa5197923bc26f224ac7f3365f16631962a456237feb1a330c4704d63ea9f3c6187bcff57bc8b66a91a19825d839d0fc7abc8bcff07206d55af6f223d8cf8c6c639c0d1dbbd672d3656527fea66f1b079c0782211f25385062fcb17e4ed4380910f7fe68a168ae22dc09f410b644321ca1fd3b005927440483feafb05e54afca6221644b45a0b47fc8d71a5755f8ceacec90e0673e49f743175168fd11abfafebf9f67de0222b0eb632db92caccc0eeb56f05a013d3bd5ec8c6a897d95530765dce93d0b9db91c05d1528e5dee5af073c9aa1fd1a8eb12d8684859bfd4940b8909ce5c3077669e281dc6713ed156159d58a69278e147c335579b24eecf14230d5b1c03c0b0d9f13d5952324275b59103c99b5e20219c7d4fc5279b266033f4e816921c96ff51a0cc72cbcd70e0cbbf97865a95232029b38f70859f303f7458407f39182e95e60a28778ee570ff9c7f6365c5a66d7123ac671493f9707c732e79227b404f169027787c02c1a9aca74b3e818abee5f07208734326e0852762cbb2e113711b8f91f1bf5bd40c6b2d31d5148ade8be85984a93b36623b81b96dd0cb8c8f679e12fea9b895928c4b3eb58c299e09d0a972eff9e9fea46cf6b0f59690afbb0895ebb144e29347110a0baadf173ca95197f258741cd5675836ff67ce1838032f39d21a25dff0bed34473701b4af29dd366768368c877e645563c3f6cc52ee80ce7997a58d73f07e4e8a646bc44e84ec002847ddefcfc8f55127670f4a351796a4d4c2900001fec69d40cf15d33350fdb982f2569d6fd3839b1e00e75103a612762d06f1f58ffff19a8692da3ea01f58c806d4f6c6ce86f78eed30df644852c018aa4adc3c12843366c64b213e63b06f7790b2c56e66f7eaff68dc53484714fe9cf02f11db932462b27226aa2c308a8d0b17210c287ca5f91ea1fefabbc127fc2dbbb00f10a20f8616dc5b07d2b7ae97f2f8d79531ef5e1365d1848bf9bebd3d5966bbeff15b8ca15f48135173aab7377b5cea1761e8162aac7dd66ab1b3281e712bfadeb780e185423c4db1cc51845ea973199bc5293ca580e1daa2a4fef043bb4727c460597aa4ba7dc59a7f60db8de692dfbb266b16a5adf9e6f2c174b0c3094257ab254fd803ad6d6320933c6ceca912b9f815e5861e010a24f874e30db3c89179b17650ee99ab629273caa538c9204728ad790250a1777feb25c916d46ae4961adcee034ac29b1768474f948a1b254eb9516f1b77ec713af50317184fc1e57ab2ef9b4655ecc73438d8673c9f80d8daca952a0c4c9e818b68c3982382b63026e5c7a7aadc029a23b025e78dc8fc547c1deb55b9044efcf364c240f742626c3f25c38b8ee62f9d2bbc4ae59a930e933c04c384dbda2ae20f931124901e20164bb8a08999be7c341745d0105ae13d5cccee3f398ce645214cfac6c536d88371192d8f28e12410063c8d737b29d6581ff8e2290519b65f9e90a0623bad4fbff10ede70b20a813f2fe3febf865980af9e1e5a2814774916fa6a9d9bac759c587fb2d7b42df289d3a56d2a41bf08fdc1884f34387172ebe78b2e06aba2e39bd73f6764780ac94af25abd02e8a2aed48563f1af7a3df86cfc83cb38f172cc4022f10f18860d2e1fabebd5c7caa5e24d6ba606c3a9fe48ff3bc7b9f28bc613aae641f809ffb354d5da3f2d8608c03ab5bd6ef98cb54c076d33cdb4baf2f496e733d05f85823ce1210763c22545ff8d5230f2164fc215462d6988becf96668c4ebe98e762ac1978e5d8445ea01ba9a684233207536161128ce3678d3b51498800547c86ef5ee09342f3beac6ca4616726dcde2717bb401ce69efdca76be3ba9e2f5d1c51efa4845a61dc7cc760a384186e87e6541a295526d1e9739a9eb33e72d34fba772ac43f6f6db18e22ca896af5af304f2322282483852b38cc444fcde906c77ee16320de82960dbea370716983b92788a4559cf4090ccd1f827a7fdf184105d98435ef2aa1f33a0c8fcfacf245ec1d16197fff269fee632da7e24e4e9ae52936a337d465e35c6fe7d9e4f5f6b4bdddb5258c9c0c4efe567ef07fa72745a5795517032a3f322e46d2140ebcd031b467d37b1757b20f934339a06ce90036680db3e2b888fbbaea39fc55891ebd9dac1f1c924f4530c742a54b30a3bc882013871e6fc377360533a3d3a4173af8f64a15a88ffd9c2389577b108ca4f99eac3b514ddd23b33955a832768eed56e6bc32e4e49749e7fbdce9e6f278c2aba2fe19a34760c1f4afbcdef3b0ed45e5f3181b8db639a8658678ef2eaf464202f8ccde5cede470dc3928b17802b456ad6dbf2aa93cd93f268b8e5bd6e57976b75dfcdb4dcaf058e92a63732bf596f763a4fa3b3fc4f27e37330f412abc6e38a78f0cd36e36055e5b46e678e7218140359eeef10d618b3ec36a9c42cfa90341fc892fad7243234d45d5b465e1a691533469c81e8d6e64930578591963d69b772e87a6eb326cf83b0e7fa715e32a4f2c9ae447d831bf3feccba46451b6389c53cad1428696b579bfbb01c6abe361bdc6c89839f6cb33ff4f3e03cf6212e6de9f33cd3233e22e753984d041fae3d8c1a2779c50b06ebe275116fa06c22d17d63163314014d7fd1d522f348177fc2a4a7bde1fd701d30300c127e983d1772a5aa58862df2cb061230b1667ed8035f589b27ede1095405854d1da1c83493beb72f6204b6a5a1eaa61179dfc14aca33ec52edb00cb18e5fe55ea05dad8504ec0dd8c442e1fec433cb7fe6daa71df2ae8940cc61155a0289d7a345e2f1bdb87428f108f14e7bae4d2c06420698affffb810de4b297a4bfc0b37c5f0f48ea49896a5c8e46fbd584bd4ae1ed60b3f5b8f89db8a3978b8e96f9ab35dcc6ade565930a2aa3753f8b26b08f8de980f9e00d1a1dae1f2bf0293e002e5032e275e0b9f22133a65982e32095a77c6888937bd9b9d839a4ee9d7ee8c039e2afef46f3b6674e11af2530d0a41709617b63b42d548a022b433198dc57932cd4d64412e5414ec45dd25927d70f00c39360a5d4d7c59483d891aa4e52436ae9a2ac85c702e09a96eac8fac41a04b94c19694bf84145abcae2825c43f283f3b2df1777b63f3fd3b655ceaa02f7fefc9a6649a44feaf12e97e4d7e0d24497573c8c73195be5a2dde2ec5c5cc4fbeee1fe60601fd46c0870a365ea4620121389eb6a98fedd9071992f8ec152a9a55fd38d4a104977d49c107f5b45611c38eb36ea0ef6645dba7a29c8783ba5c7e3a4f459eab18da32dffb2b61184a80e349db6d06cf9f66c56a1757c647259f60a17f0172c3326ba25a5157e97f20bbd617c0a69c282b2602c18408f19bfc00f6fe72498632d98d8f61e042dfd9ffc15a7471080782d789e650451d6b7a7d22f0597699c72d1ac70d4320cd18a9d93ad79ba9758e855659d09db05b5d02560dc98d10d54a5e591e74eac931f9cc5def2e2b1b2ed94fb302802201382a5e503ed0c905e8ea0344b2414c5ee1081e74159a6f7879795a4ae720a48dbb98d324cf1a2d9a19810a5e7923cad6a31cc86286993e15b9703ae8f17483b01304e0e0b1f6db481d3495ebe1cb9e0a160d018858eb3938583a3cc8fb4c2d68f525eb2f4c9b19ac142e22d818d95be04b8f8164681f6160893a7bac72dda179bfd38d4a0068bffa018d92a0cd4968ef8ef17070df3352d25ebc71bef6789892e198ff17e5e977d9f9b557eeab716c4a6b570e2611e597268d3ab36b788fcc89d6b53b2a66c2a40a3cbc7a538d2cb769ff0d1e65bd62c59a824ed2e0fdec2be84534d860a02c04d252a9bf2c4d8f2bf43debdde820af658a32aac1dc9cad1dcae04db8a0a3b4fa06f0b78ecafe87b537f2e41ca99ba64a64d0b6e218642137126ed4bf803b3853b86dc33abee3a1ad7da58b9392646ff91c8b84dbf392fa4b4e74496a6dc014b8f2011b9a6fd25d9f9cdaf858758c126cabb90c12bf22b89735b22524cbd1e90a072b2e77c8229cb0e2edb85ce10c1a2ec3d3b6cdfbcbe148903c31a04bdaf038c45ea2459ea3838a89cd96ec1a5fb9ca6ee83a17602dbb317e0ef6e3f16dee81df9dea78810ce5a6c37b18f5736a65cb7c5dbb868f57c0f3cae0501d8c231db6aa2e584537a3f57a236b860e8711ab9e3d81951d97f2a08d71295de145a658107a21d00ac8f2f1b0979e337f7474cd1c2e63d07772b05cc704e54e2273b6112d4d7f1c6d8f762b68241e7c9e79c8a2ade85d6c5eca84b46c80a3edba5866</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">本篇文章需要密碼才能進入</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">🧬ASVD: Activation-aware Singular Value Decomposition for Compressing Large Language Models</summary>
    
    
    
    <category term="Project" scheme="https://weilin1205.github.io/categories/Project/"/>
    
    
    <category term="AI Model Compression" scheme="https://weilin1205.github.io/tags/AI-Model-Compression/"/>
    
    <category term="SVD" scheme="https://weilin1205.github.io/tags/SVD/"/>
    
  </entry>
  
  <entry>
    <title>UVa 10050 Hartals</title>
    <link href="https://weilin1205.github.io/posts/UVa10050.html"/>
    <id>https://weilin1205.github.io/posts/UVa10050.html</id>
    <published>2024-02-19T03:50:04.000Z</published>
    <updated>2024-06-11T10:00:50.415Z</updated>
    
    <content type="html"><![CDATA[<a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a><h1>UVa 10050 Hartals</h1><div class="row">    <embed src="https://onlinejudge.org/external/100/10050.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><ul><li>輸入第一行有一個整數<code>T</code>，代表有T組測資。</li><li>每組測資第一行包含一個整數<code>N</code>(7 ≤ N ≤ 3650)，N代表模擬的天數。</li><li>下一行包含一個整數<code>P</code>(1 ≤ P ≤ 100)，表示有幾個政黨。</li><li>接下來的P行，第i行包含一個正整數<code>hi(永遠不會是7的倍數)</code>，代表第i個政黨的罷會參數。</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li>從第一個政黨開始逐一處理。</li></ul><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">14</span><br><span class="line">3</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">8</span><br><span class="line">100</span><br><span class="line">4</span><br><span class="line">12</span><br><span class="line">15</span><br><span class="line">25</span><br><span class="line">40</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">15</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10050.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10050.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/10050"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> T, D, P;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        cin&gt;&gt;D; <span class="comment">//day</span></span><br><span class="line">        cin&gt;&gt;P; <span class="comment">//political party</span></span><br><span class="line">        <span class="type">int</span> h[<span class="number">105</span>]; <span class="comment">//各政黨罷會間隔天數</span></span><br><span class="line">        <span class="comment">//input</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;P; i++) cin&gt;&gt;h[i];</span><br><span class="line">        <span class="comment">//check</span></span><br><span class="line">        <span class="type">int</span> table[<span class="number">3655</span>]=&#123;<span class="number">0</span>&#125;,k; <span class="comment">//calendar</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;P; i++) &#123;  <span class="comment">//從第一個政黨開始逐一處理</span></span><br><span class="line">            k=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=h[i];j&lt;=D;j=h[i]*k) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j%<span class="number">7</span>!=<span class="number">6</span> &amp;&amp; j%<span class="number">7</span>!=<span class="number">0</span>) <span class="comment">//遇到每週六或七不計</span></span><br><span class="line">                    table[j]=<span class="number">1</span>;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//output</span></span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=D; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(table[i]==<span class="number">1</span>)</span><br><span class="line">                cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;cnt&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a>]]></content>
    
    
    <summary type="html">🎈UVa 10050 - Hartals Accepted Solutions</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
    <category term="CPE" scheme="https://weilin1205.github.io/tags/CPE/"/>
    
  </entry>
  
  <entry>
    <title>UVa 100 - The 3n+1 problem</title>
    <link href="https://weilin1205.github.io/posts/uva100.html"/>
    <id>https://weilin1205.github.io/posts/uva100.html</id>
    <published>2024-01-20T11:33:03.000Z</published>
    <updated>2024-05-29T21:55:43.937Z</updated>
    
    <content type="html"><![CDATA[<a class="btn-beautify purple larger" href="https://weilin1205.github.io/posts/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a><h1>UVa 100 - The 3n+1 problem</h1><div class="row">    <embed src="https://onlinejudge.org/external/1/100.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><ul><li>題目給定一個演算法，當 <code>n 為 1 則結束</code>，如果 <code>n 是奇數則 n = 3*n+1</code>，否則<code>n = n/2</code>。每一次遞迴都會打印一次 n。</li><li>給一個輸入 n ,透過以上的演算法我們可以得到一個數列（1作為結尾）。此數列的長度稱為 n 的 <code>cycle-length</code>。<ul><li>例如輸入 n 為 <code>22</code>, 得到的數列： <code>22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1</code> ，則 <strong>22 的 cycle length 為 16</strong>。</li></ul></li><li>輸入包含多列測資，每列有一對整數 i,j (0&lt; i,j &lt;1000000)。</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li>依照題目的說明製作遞迴式。</li></ul><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br><span class="line">100 200</span><br><span class="line">201 210</span><br><span class="line">900 1000</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10 20</span><br><span class="line">100 200 125</span><br><span class="line">201 210 89</span><br><span class="line">900 1000 174</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10035.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10035.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/100"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;i&gt;&gt;j) &#123;</span><br><span class="line">        <span class="type">int</span> m=i, n=j;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;j) </span><br><span class="line">            <span class="built_in">swap</span>(i,j);</span><br><span class="line">        <span class="type">int</span> k=i;</span><br><span class="line">        <span class="type">int</span> max=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(k&lt;=j) &#123;</span><br><span class="line">            <span class="type">int</span> n=k;</span><br><span class="line">            <span class="type">int</span> temp=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(n!=<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>) &#123;  <span class="comment">//n is odd</span></span><br><span class="line">                    n=<span class="number">3</span>*n+<span class="number">1</span>;</span><br><span class="line">                    n/=<span class="number">2</span>;</span><br><span class="line">                    temp+=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>) &#123;  <span class="comment">//n is even</span></span><br><span class="line">                    n/=<span class="number">2</span>;</span><br><span class="line">                    temp++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(max&lt;temp) </span><br><span class="line">                max=temp;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;m&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><a class="btn-beautify purple larger" href="https://weilin1205.github.io/posts/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a>]]></content>
    
    
    <summary type="html">🎈UVa 100 - The 3n+1 problem</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
    <category term="CPE" scheme="https://weilin1205.github.io/tags/CPE/"/>
    
  </entry>
  
  <entry>
    <title>Upgrading Python to the Latest Version on Ubuntu Linux</title>
    <link href="https://weilin1205.github.io/posts/linuxpython.html"/>
    <id>https://weilin1205.github.io/posts/linuxpython.html</id>
    <published>2023-12-29T13:52:04.000Z</published>
    <updated>2023-12-31T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Upgrade Python to latest version on Ubuntu Linux</h1><ol><li>First, update your system by running</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><ol start="2"><li>Check if Python 3.12 is available by running</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt list | grep python3.12</span><br></pre></td></tr></table></figure><ol start="3"><li>Install Python 3.12</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3.12</span><br></pre></td></tr></table></figure><ol start="4"><li>Run Python 3.12</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.12 --version</span><br></pre></td></tr></table></figure><blockquote><p>The right way to run Python 3.12 On Linux Desktops is by using a virtual environment.<br>E.g. you can create a new virtual environment by running</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.12 -m venv <span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>and activate it by running</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> <span class="built_in">env</span>/bin/activate</span><br></pre></td></tr></table></figure><p>Now you can run <code>python --version</code> and you should see the latest version of Python as the output.</p></blockquote><p>參考資料：</p><ul><li><a href="https://cloudbytes.dev/snippets/upgrade-python-to-latest-version-on-ubuntu-linux">https://cloudbytes.dev/snippets/upgrade-python-to-latest-version-on-ubuntu-linux</a></li></ul>]]></content>
    
    
    <summary type="html">🪜Upgrading Python to the Latest Version on Ubuntu Linux</summary>
    
    
    
    <category term="Linux" scheme="https://weilin1205.github.io/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://weilin1205.github.io/tags/Linux/"/>
    
    <category term="Python" scheme="https://weilin1205.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Setting Up Anaconda: Installation and Environment Configuration Guide</title>
    <link href="https://weilin1205.github.io/posts/setconda.html"/>
    <id>https://weilin1205.github.io/posts/setconda.html</id>
    <published>2023-12-28T13:52:04.000Z</published>
    <updated>2023-12-30T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Anaconda: Installation and Environment Configuration</h1><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-toolbox"></i>設備環境</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-download"></i>Anaconda官方網站</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-chalkboard-teacher"></i>指令附錄(安裝完成後參考)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><ul><li><strong>OS name: Ubuntu 22.04</strong></li><li><strong>OS type: 64-bits</strong></li><li><strong>Python version: 3.10.12</strong></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><p><strong>官方網站：<a href="https://www.anaconda.com/download">https://www.anaconda.com/download</a></strong><br><strong>本篇教學為 Step by Step，跟著下面8個步驟走完即可安裝成功</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##### 進入與離開base環境 #####</span></span><br><span class="line">conda activate base    <span class="comment"># 進入base環境</span></span><br><span class="line">conda deactivate       <span class="comment"># 離開base環境</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### 檢查已存在環境 #####</span></span><br><span class="line">conda <span class="built_in">env</span> list</span><br><span class="line"></span><br><span class="line"><span class="comment">##### 虛擬環境建立及相關指令 #####</span></span><br><span class="line">conda create --name M2 python=3.8  <span class="comment">#建立新環境M2，M2是環境名稱 可以自由取名</span></span><br><span class="line">conda activate M2                  <span class="comment">#進入M2環境</span></span><br><span class="line">conda install numpy                <span class="comment">#在環境中安裝指定套件</span></span><br><span class="line">conda deactivate                   <span class="comment">#離開conda環境</span></span><br><span class="line">conda <span class="built_in">env</span> remove --name M2         <span class="comment">#移除M2虛擬環境</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### 更新指令 #####</span></span><br><span class="line">conda update conda</span><br><span class="line">conda update anaconda</span><br><span class="line"></span><br><span class="line"><span class="comment">##### 解除安裝 #####</span></span><br><span class="line">conda install anaconda-clean   <span class="comment">#Anaconda解除安裝</span></span><br><span class="line">anaconda-clean                 <span class="comment">#移除Anaconda相關資料</span></span><br><span class="line">anaconda-clean --<span class="built_in">yes</span>           <span class="comment">#一次移除Anaconda相關資料</span></span><br><span class="line"><span class="built_in">rm</span> -rf ~/anaconda3             <span class="comment">#移除整個Anaconda安裝目錄</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><ol><li>保險起見，先更新系統套件到最新版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; upgrade</span><br></pre></td></tr></table></figure><ol start="2"><li>安裝 cURL 套件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure><ol start="3"><li>透過 cURL 溝通 Anaconda 官方的下載位置，版本號可以到官方網站挑選新版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><ol start="4"><li>查看檢查碼是否與Anaconda官網中檢查碼相符</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sha256sum</span> Anaconda3-2021.05-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><ol start="5"><li>使用bash指令執行Anaconda安裝檔</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash Anaconda3-2021.05-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><ol start="6"><li>安裝過程會需要按 Enter 鍵並輸入&quot;yes&quot;，以授予權限並繼續該過程</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">yes</span></span><br></pre></td></tr></table></figure><ol start="7"><li>讓當前頁面生效新增加的conda命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><ol start="8"><li>檢查Anaconda安裝訊息，執行下述命令，有出現目前Anaconda的安裝訊息為安裝成功</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🛠️Setting Up Anaconda: Installation and Environment Configuration Guide</summary>
    
    
    
    <category term="Anaconda" scheme="https://weilin1205.github.io/categories/Anaconda/"/>
    
    
    <category term="Linux" scheme="https://weilin1205.github.io/tags/Linux/"/>
    
    <category term="Anaconda" scheme="https://weilin1205.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 63 - Unique Paths II</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-63-Unique-Paths-II.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-63-Unique-Paths-II.html</id>
    <published>2023-09-30T04:25:10.000Z</published>
    <updated>2024-03-18T21:58:48.816Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/unique-paths-ii/description/">https://leetcode.com/problems/unique-paths-ii/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-thumbtack"></i>Solution 1 ( Recommend, C++ )</button></li><li class="tab"><button type="button" data-href="#name-2"><i class="fas fa-layer-group"></i>Solution 2 ( Python )</button></li><li class="tab"><button type="button" data-href="#name-3"><i class="fas fa-layer-group"></i>Solution 3 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Time complexity: O(mn)</span></span><br><span class="line"><span class="string">Space complexity: O(mn)</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; obstacleGrid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m = obstacleGrid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n = obstacleGrid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (obstacleGrid[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">1</span> || obstacleGrid[m - <span class="number">1</span>][n - <span class="number">1</span>] == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 起點終點可以是障礙物，所以直接輸出為0種方式</span></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 初始化dp，一開始先全部設為零</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (obstacleGrid[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j] = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">// 如果踢到鐵板，也就是目前搜到的格子是障礙物，則直接把可以通到那格的方法數設為零</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                        <span class="comment">// 起點的方法數是1</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = dp[i][j - <span class="number">1</span>];</span><br><span class="line">                        <span class="comment">// 如果已經在最上邊，則方法只可能來自該格子的左邊</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">                        <span class="comment">// 如果已經在最左邊，則方法只可能來自該格子的上邊</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i][j - <span class="number">1</span>];</span><br><span class="line">                        <span class="comment">// 如果在其餘位置，則方法數會來自於該格子左邊與上邊的相加</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="name-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># O(m*n) space</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">uniquePathsWithObstacles1</span>(<span class="params">self, obstacleGrid</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> obstacleGrid:</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    r, c = <span class="built_in">len</span>(obstacleGrid), <span class="built_in">len</span>(obstacleGrid[<span class="number">0</span>])</span><br><span class="line">    dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(c)] <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(r)]</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span> - obstacleGrid[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, r):</span><br><span class="line">        dp[i][<span class="number">0</span>] = dp[i-<span class="number">1</span>][<span class="number">0</span>] * (<span class="number">1</span> - obstacleGrid[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">        dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i-<span class="number">1</span>] * (<span class="number">1</span> - obstacleGrid[<span class="number">0</span>][i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, r):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">            dp[i][j] = (dp[i][j-<span class="number">1</span>] + dp[i-<span class="number">1</span>][j]) * (<span class="number">1</span> - obstacleGrid[i][j])</span><br><span class="line">    <span class="keyword">return</span> dp[-<span class="number">1</span>][-<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line"><span class="comment"># O(n) space</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">uniquePathsWithObstacles2</span>(<span class="params">self, obstacleGrid</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> obstacleGrid:</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    r, c = <span class="built_in">len</span>(obstacleGrid), <span class="built_in">len</span>(obstacleGrid[<span class="number">0</span>])</span><br><span class="line">    cur = [<span class="number">0</span>] * c</span><br><span class="line">    cur[<span class="number">0</span>] = <span class="number">1</span> - obstacleGrid[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">        cur[i] = cur[i-<span class="number">1</span>] * (<span class="number">1</span> - obstacleGrid[<span class="number">0</span>][i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, r):</span><br><span class="line">        cur[<span class="number">0</span>] *= (<span class="number">1</span> - obstacleGrid[i][<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">            cur[j] = (cur[j-<span class="number">1</span>] + cur[j]) * (<span class="number">1</span> - obstacleGrid[i][j])</span><br><span class="line">    <span class="keyword">return</span> cur[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># in place</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">uniquePathsWithObstacles</span>(<span class="params">self, obstacleGrid</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> obstacleGrid:</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    r, c = <span class="built_in">len</span>(obstacleGrid), <span class="built_in">len</span>(obstacleGrid[<span class="number">0</span>])</span><br><span class="line">    obstacleGrid[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span> - obstacleGrid[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, r):</span><br><span class="line">        obstacleGrid[i][<span class="number">0</span>] = obstacleGrid[i-<span class="number">1</span>][<span class="number">0</span>] * (<span class="number">1</span> - obstacleGrid[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">        obstacleGrid[<span class="number">0</span>][i] = obstacleGrid[<span class="number">0</span>][i-<span class="number">1</span>] * (<span class="number">1</span> - obstacleGrid[<span class="number">0</span>][i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, r):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">1</span>, c):</span><br><span class="line">            obstacleGrid[i][j] = (obstacleGrid[i-<span class="number">1</span>][j] + obstacleGrid[i][j-<span class="number">1</span>]) * (<span class="number">1</span> - obstacleGrid[i][j])</span><br><span class="line">    <span class="keyword">return</span> obstacleGrid[-<span class="number">1</span>][-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="name-3"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Time complexity: O(mn)</span></span><br><span class="line"><span class="string">Space complexity: O(mn)</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; obstacleGrid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m=obstacleGrid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n=obstacleGrid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(obstacleGrid[<span class="number">0</span>][<span class="number">0</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(obstacleGrid[m<span class="number">-1</span>][n<span class="number">-1</span>]==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n,<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(obstacleGrid[i][<span class="number">0</span>]==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            dp[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(obstacleGrid[<span class="number">0</span>][i]==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            dp[<span class="number">0</span>][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(obstacleGrid[i<span class="number">-1</span>][j]==<span class="number">1</span> &amp;&amp; obstacleGrid[i][j<span class="number">-1</span>]==<span class="number">0</span>) &#123;</span><br><span class="line">                    dp[i][j]=dp[i][j<span class="number">-1</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(obstacleGrid[i<span class="number">-1</span>][j]==<span class="number">0</span> &amp;&amp; obstacleGrid[i][j<span class="number">-1</span>]==<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j]=dp[i<span class="number">-1</span>][j];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obstacleGrid[i<span class="number">-1</span>][j]==<span class="number">1</span> &amp;&amp; obstacleGrid[i][j<span class="number">-1</span>]==<span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j]=<span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i][j<span class="number">-1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">🚩LeetCode 63 - Unique Paths II Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 198 - House Robber</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-198-House-Robber.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-198-House-Robber.html</id>
    <published>2023-09-30T04:12:05.000Z</published>
    <updated>2024-01-23T17:31:59.586Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/house-robber/description/">https://leetcode.com/problems/house-robber/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">rob</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dp[i] = max(dp[i-1], dp[i-2]+nums[i])</span></span><br><span class="line">        <span class="comment">// 1： dp[i-1] 表示強盜不搶當前房屋，但確定是他會搶前i-1那間房屋</span></span><br><span class="line">        <span class="comment">// 2： dp[i-2]+nums[i] 表示搶劫當前房屋+ 掠奪之前房屋的物品</span></span><br><span class="line">        <span class="type">int</span> dp[<span class="number">1000</span>];</span><br><span class="line">        dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="built_in">max</span>(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++) &#123;</span><br><span class="line">            dp[i]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]+nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🚩LeetCode 198 - House Robber Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 120 - Triangle</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-120-Triangle.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-120-Triangle.html</id>
    <published>2023-09-30T04:12:05.000Z</published>
    <updated>2024-01-23T17:31:51.663Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/triangle/description/">https://leetcode.com/problems/triangle/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumTotal</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m=triangle.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n=triangle[m<span class="number">-1</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++) &#123;</span><br><span class="line">            triangle[i][<span class="number">0</span>]+=triangle[i<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            triangle[i][i]+=triangle[i<span class="number">-1</span>][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;m;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n&amp;&amp;j&lt;i;j++) &#123;</span><br><span class="line">                triangle[i][j]+=<span class="built_in">min</span>(triangle[i<span class="number">-1</span>][j],triangle[i<span class="number">-1</span>][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans=triangle[m<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(triangle[m<span class="number">-1</span>][i]&lt;ans) &#123;</span><br><span class="line">                ans=triangle[m<span class="number">-1</span>][i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🚩LeetCode 120 - Triangle Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 74 - Search a 2D Matrix</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-74-Search-a-2D-Matrix.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-74-Search-a-2D-Matrix.html</id>
    <published>2023-09-30T04:12:05.000Z</published>
    <updated>2024-01-23T17:31:40.216Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/search-a-2d-matrix/description/">https://leetcode.com/problems/search-a-2d-matrix/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">searchMatrix</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; &amp;matrix, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> m = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = m * n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l != r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l + r - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (matrix[mid / m][mid % m] &lt; target)</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> matrix[r / m][r % m] == target;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🚩LeetCode 74 - Search a 2D Matrix Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 931 - Minimum Falling Path Sum</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-931-Minimum-Falling-Path-Sum.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-931-Minimum-Falling-Path-Sum.html</id>
    <published>2023-09-30T04:12:05.000Z</published>
    <updated>2024-01-23T17:32:30.432Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/minimum-falling-path-sum/description/">https://leetcode.com/problems/minimum-falling-path-sum/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minFallingPathSum</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = matrix.<span class="built_in">size</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">0</span>) &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j],matrix[i<span class="number">-1</span>][j+<span class="number">1</span>]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(j==n<span class="number">-1</span>) &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j<span class="number">-1</span>],matrix[i<span class="number">-1</span>][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j<span class="number">-1</span>],matrix[i<span class="number">-1</span>][j]),matrix[i<span class="number">-1</span>][j+<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans=matrix[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[n<span class="number">-1</span>][i]&lt;ans) &#123;</span><br><span class="line">                ans=matrix[n<span class="number">-1</span>][i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🚩LeetCode 931 - Minimum Falling Path Sum Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>01 knapsack</title>
    <link href="https://weilin1205.github.io/posts/01knapsack.html"/>
    <id>https://weilin1205.github.io/posts/01knapsack.html</id>
    <published>2023-09-02T05:02:05.000Z</published>
    <updated>2024-01-23T17:13:40.435Z</updated>
    
    <content type="html"><![CDATA[<h1>01 knapsack</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> N = <span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> backpack = <span class="number">10</span>; <span class="comment">// 背包容量</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; weight = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; value = &#123;<span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(backpack + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">chosen</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(backpack + <span class="number">1</span>, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= backpack; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (weight[i] &lt;= j) &#123;</span><br><span class="line">                dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &gt; dp[i - <span class="number">1</span>][j]) &#123;</span><br><span class="line">                    <span class="comment">// 如果dp[i][j]不是來自於上面dp[i-1][j]，就代表物品i有被選取</span></span><br><span class="line">                    <span class="comment">// 詳細參考https://www.geeksforgeeks.org/printing-items-01-knapsack/</span></span><br><span class="line">                    chosen[i][j] = <span class="literal">true</span>; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;max value: &quot;</span> &lt;&lt; dp[N][backpack] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 chosen 数组来找出所选择的物品</span></span><br><span class="line">    <span class="type">int</span> i = N, j = backpack;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; selectedItems;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span> &amp;&amp; j &gt; <span class="number">0</span>) &#123; <span class="comment">// 物品序號&gt;0 &amp;&amp; 可用空間&gt;0</span></span><br><span class="line">        <span class="keyword">if</span> (chosen[i][j]) &#123; <span class="comment">// 若有被選擇</span></span><br><span class="line">            selectedItems.<span class="built_in">push_back</span>(i); <span class="comment">// 加入被選向量(selectedItems)中</span></span><br><span class="line">            j -= weight[i]; <span class="comment">// 可用空間扣掉該物品重量</span></span><br><span class="line">        &#125;</span><br><span class="line">        i--; <span class="comment">// 物品序號-1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;selected: &quot;</span>; <span class="comment">// 注意，要&quot;逆&quot;向輸出這樣東西才會保持原來的順序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = selectedItems.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        cout &lt;&lt; selectedItems[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="好資源">好資源</h3><ul><li>01背包，包含路徑回朔：<a href="https://www.geeksforgeeks.org/printing-items-01-knapsack/">https://www.geeksforgeeks.org/printing-items-01-knapsack/</a></li></ul>]]></content>
    
    
    <summary type="html">🅰️Introduction of 01knapsack algorithm</summary>
    
    
    
    <category term="Algorithm" scheme="https://weilin1205.github.io/categories/Algorithm/"/>
    
    
    <category term="knapsack" scheme="https://weilin1205.github.io/tags/knapsack/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 9 - Palindrome Number</title>
    <link href="https://weilin1205.github.io/posts/LeetCode-9-Palindrome-Number.html"/>
    <id>https://weilin1205.github.io/posts/LeetCode-9-Palindrome-Number.html</id>
    <published>2023-06-06T14:00:04.000Z</published>
    <updated>2024-06-02T07:10:31.027Z</updated>
    
    <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/palindrome-number/">https://leetcode.com/problems/palindrome-number/</a></p></div><h2 id="題目概要">題目概要</h2><p>題目給你一個整數，請你判斷是否為<code>回文數</code>。</p><div class="note info flat"><p>回文數：係指一個數字在反轉之後仍然保持不變的數字，例如<code>35651</code>、<code>398893</code>、<code>9009</code>、<code>212373212</code>等。</p></div><h2 id="解題思路">解題思路</h2><blockquote><p>判斷回文數的一種常見方法是將數值轉換成字符串，然後將字符串反轉並與原始字符串比較。這種方法雖然簡單易懂，但是效率較低，尤其是在處理大量數字時。建議使用下面的方法會更為合適。</p></blockquote><p>要判斷一個數值是否為回文數：</p><ul><li>首先，如果數字為<code>負數</code>或是<code>以0結尾</code>，則不可能是回文數。</li><li>接著製造一個<code>反轉數字rev</code>。</li><li>最後讓兩個數字去對比，確認反轉數字是否為原來數字的回文數：<ul><li>如果數字長度為偶數，則 x == reversed</li><li>如果數字長度為奇數，則 x == reversed / 10</li></ul></li></ul><h2 id="參考程式碼">參考程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果數字為負數或是以0結尾，則不可能是回文數。</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 製造一個反轉數字</span></span><br><span class="line">        <span class="type">int</span> rev = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; rev) &#123;</span><br><span class="line">            rev = rev * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果數字長度為偶數，則 x == reversed</span></span><br><span class="line">        <span class="comment">// 如果數字長度為奇數，則 x == reversed / 10</span></span><br><span class="line">        <span class="keyword">return</span> x == rev || x == rev / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">🚩LeetCode 9 - Palindrome Number Accepted Solutions</summary>
    
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/categories/LeetCode/"/>
    
    
    <category term="LeetCode" scheme="https://weilin1205.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>C++ Data Type Ranges</title>
    <link href="https://weilin1205.github.io/posts/Cpp-Data-Type-Ranges.html"/>
    <id>https://weilin1205.github.io/posts/Cpp-Data-Type-Ranges.html</id>
    <published>2023-06-06T13:04:03.000Z</published>
    <updated>2024-05-28T17:53:55.800Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th><strong>Type Name</strong></th><th><strong>Bytes</strong></th><th><strong>Other Names</strong></th><th><strong>Range of Values</strong></th></tr></thead><tbody><tr><td>int</td><td>4</td><td>signed</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned int</td><td>4</td><td>unsigned</td><td>0 to 4,294,967,295</td></tr><tr><td>__int8</td><td>1</td><td>char</td><td>-128 to 127</td></tr><tr><td>unsigned __int8</td><td>1</td><td>unsigned char</td><td>0 to 255</td></tr><tr><td>__int16</td><td>2</td><td>short, short int, signed short int</td><td>-32,768 to 32,767</td></tr><tr><td>unsigned __int16</td><td>2</td><td>unsigned short, unsigned short int</td><td>0 to 65,535</td></tr><tr><td>__int32</td><td>4</td><td>signed, signed int, int</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned __int32</td><td>4</td><td>unsigned, unsigned int</td><td>0 to 4,294,967,295</td></tr><tr><td>__int64</td><td>8</td><td>long long, signed long long</td><td>-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td></tr><tr><td>unsigned __int64</td><td>8</td><td>unsigned long long</td><td>0 to 18,446,744,073,709,551,615</td></tr><tr><td>bool</td><td>1</td><td>none</td><td>false or true</td></tr><tr><td>char</td><td>1</td><td>none</td><td>-128 to 127 by default  0 to 255 when compiled by using /J</td></tr><tr><td>signed char</td><td>1</td><td>none</td><td>-128 to 127</td></tr><tr><td>unsigned char</td><td>1</td><td>none</td><td>0 to 255</td></tr><tr><td>short</td><td>2</td><td>short int, signed short int</td><td>-32,768 to 32,767</td></tr><tr><td>unsigned short</td><td>2</td><td>unsigned short int</td><td>0 to 65,535</td></tr><tr><td>long</td><td>4</td><td>long int, signed long int</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned long</td><td>4</td><td>unsigned long int</td><td>0 to 4,294,967,295</td></tr><tr><td>long long</td><td>8</td><td>none (but equivalent to __int64)</td><td>-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td></tr><tr><td>unsigned long long</td><td>8</td><td>none (but equivalent to unsigned __int64)</td><td>0 to 18,446,744,073,709,551,615</td></tr><tr><td>enum</td><td>varies</td><td>none</td><td></td></tr><tr><td>float</td><td>4</td><td>none</td><td>3.4E +/- 38 (7 digits)</td></tr><tr><td>double</td><td>8</td><td>none</td><td>1.7E +/- 308 (15 digits)</td></tr><tr><td>long double</td><td>same as double</td><td>none</td><td>Same as double</td></tr><tr><td>wchar_t</td><td>2</td><td>__wchar_t</td><td>0 to 65,535</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">🛠️C++ Data Type Ranges</summary>
    
    
    
    <category term="UsefulTools" scheme="https://weilin1205.github.io/categories/UsefulTools/"/>
    
    
    <category term="UsefulTools" scheme="https://weilin1205.github.io/tags/UsefulTools/"/>
    
  </entry>
  
  <entry>
    <title>UVa 10055 - Hashmat the brave warrior</title>
    <link href="https://weilin1205.github.io/posts/uva10055.html"/>
    <id>https://weilin1205.github.io/posts/uva10055.html</id>
    <published>2023-06-06T11:33:03.000Z</published>
    <updated>2024-06-11T10:00:59.547Z</updated>
    
    <content type="html"><![CDATA[<a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a><h1>UVa 10055 - Hashmat the brave warrior</h1><div class="row">    <embed src="https://onlinejudge.org/external/100/10055.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><ul><li>每行輸入包含兩個數字。這兩個數字分別表示Hashmat的軍隊或是對手的軍隊的士兵數量，兩者可能顛倒放置。</li><li>輸出<strong>兩方士兵數量的差距</strong>即可。</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li><strong>把題目給的兩個數字相減再取絕對值即可</strong>。</li><li>僅需注意測資的大小，測資範圍到2^32，所以不能只用int，需要使用long long int。</li><li>補充：<a class="btn-beautify orange" href="https://weilin1205.github.io/posts/Cpp-Data-Type-Ranges.html"   title="C++ Data Type Ranges"><i class="far fa-hand-point-right"></i><span>C++ Data Type Ranges</span></a></li></ul><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 2 4</span><br><span class="line">3 2 4 6</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10055.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10055.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/10055"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li><li class="tab"><button type="button" data-href="#name-2"><i class="fas fa-star-half-alt"></i>Solution 2 ( Python3 )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a,b;  <span class="comment">//測資範圍到2^32，所以不能只用int</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b) &#123;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">abs</span>(b-a)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="name-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a, b = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">abs</span>(b - a))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><a class="btn-beautify purple larger" href="https://weilin1205.github.io/2022/07/28/UVa/CPEbasic.html"   title="回到 CPE 必考一顆星 49 題選集"><i class="fas fa-reply-all"></i><span>回到 CPE 必考一顆星 49 題選集</span></a>]]></content>
    
    
    <summary type="html">🎈UVa 10055 - Hashmat the brave warrior Accepted Solutions</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
    <category term="CPE" scheme="https://weilin1205.github.io/tags/CPE/"/>
    
  </entry>
  
  <entry>
    <title>Selected Inspirational Quotes</title>
    <link href="https://weilin1205.github.io/posts/Selected-Inspirational-Quotes.html"/>
    <id>https://weilin1205.github.io/posts/Selected-Inspirational-Quotes.html</id>
    <published>2023-05-28T12:31:21.000Z</published>
    <updated>2024-03-16T23:50:12.113Z</updated>
    
    <content type="html"><![CDATA[<h1>Selected Inspirational Quotes</h1><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>The helm that steers destiny is perseverance. Hold on to every thread of possibility, never abandon a chance, and never cease striving, even for a single day!<br>駕馭命運的舵是奮鬥。不放手一絲可能，不屏棄一點機會，不停止一日努力！</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>True success in life lies not in the magnitude of achievements, but in whether you strive to actualize yourself, raise your voice, and forge your own path!<br>真正成功的人生，不在於成就的大小，而在於你是否努力地去實現自我，喊出自己的聲音，走出屬於自己的道路！</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>The rungs of a ladder were never meant for resting your feet; they merely provide a temporary pause for one foot, enabling the other foot to push higher!<br>梯子的梯階從來不是用來擱腳的，它只是讓一隻腳暫放一段時間，讓另一隻腳能夠再往上蹬！</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>The climber aspiring to reach the summit will not be captivated by a single footprint along the way!<br>志在峰巔的攀登者，不會陶醉在沿途的某個腳印之中！</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>One’s greatest enemy is oneself; there are no tasks that cannot be accomplished, only a self devoid of confidence!<br>一個人最大的敵人是自己，沒有完不成的任務，只有失去信心的自己！</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>Those who are less capable than you haven’t given up, and those who are better than you are still striving. What right do you have to claim powerlessness?<br>比你差的人沒放棄，比你好的人仍在努力，你有什麼資格說自己無能為力！</p></div><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>Face the past with the least amount of regret. Face the present with the least amount of waste. Face the future with the greatest abundance of dreams!<br>用最少的悔恨面對過去。用最少的浪費面對現在。用最多的夢想面對未來！</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>A sail, without being hoisted on the mast, is but a useless cloth; a mast, without a sail, is merely an ordinary pillar; an ideal, without being put into action, is a hazy mist of nothingness; action, without an ideal, is walking a path with no end in sight!<br>風帆，不掛在桅杆上，是一塊無用的布；桅杆，不掛上風帆，是一根平常的柱；理想，不付諸行動，是虛無縹緲的霧；行動，卻沒有理想，是徒走沒有盡頭的路！</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>No matter how long the journey, it can be completed step by step; no matter how short the path, it cannot be reached without taking a step forward!<br>再長的路，一步步也能走完，再短的路，不邁開雙腳也無法到達！</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>What may appear more difficult than reaching the heavens can sometimes be achieved effortlessly, and the difference lies in one’s belief!<br>看起來比登天還難的事，有時卻輕而易舉地做到，差別就在信念！</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>Do not let trivial matters obstruct your vision; there is a greater world awaiting us!<br>不要為小事遮住視線，我們還有更大的世界！</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>Have the openness to accept what cannot be changed, the courage to change what can be changed, and the wisdom to discern the difference between the two!<br>有胸懷去接受不能改變的事，有勇氣取改變能改變的事，有智慧去分辨兩者的不同！</p></div><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>Don’t constantly complain about life not being lucky enough; it is you who owes life an effort. Every present moment you dislike has a past where you didn’t strive hard enough. The beauty of the future depends on whether you are willing to give it your all right now!<br>別總是抱怨生活不夠幸運，是你欠了生活一份努力，每一個你討厭的現在，都有一個不夠努力的曾經，未來美不美，取決於你現在拼不拼！</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>The establishment of great accomplishments in life lies not in knowing, but in doing!<br>人生偉業的建立，不在能知，乃在能行！</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>There are no efforts in vain in this world, nor are there coincidental successes. Everything that happens effortlessly is actually a result of being in the right place at the right time. In life, no path is walked in vain, and no hardship is endured without purpose. Every step taken paves the way and lays the foundation for the future!<br>世上沒有白費的努力，也沒有碰巧的成功，一切無心插柳，其實都是水到渠成。人生沒有白走的路，也沒有白吃的苦，跨出去的每一步，都是未來的基石與鋪墊！</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>Success is not something that only exists in the future; it is accumulated continuously from the moment you make the decision to act.<br>成功不是將來才有的，而是從決定去做的那一刻起，持續地累積！</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>As long as there is even a slight chance, I will strive for that chance with all my might, pushing myself until there is nothing more to give. And then, I will accept the outcome with serenity, knowing that it is all to ensure that when I look back one day, I will have no regrets in my journey of life.<br>只要有一分機會，我也會為那一分而努力，努力到無可努力為止，再淡然接受結果，這只不過是為了在驀然回首之時，能無愧於生命中的自己！</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>Life is like a cup of clear tea, a melody of a song, a thought-provoking poem. Let us journey together, savoring every step, experiencing every moment, quietly savoring the beauty of this precious life!<br>生命就是一杯清茶，就是一曲歌謠，就是一首耐人尋味的小詩！讓我們一路行走，一路品味，一路經歷，靜靜享受這美麗的人生！</p></div>]]></content>
    
    
    <summary type="html">🔥Selected Inspirational Quotes</summary>
    
    
    
    <category term="Life" scheme="https://weilin1205.github.io/categories/Life/"/>
    
    
  </entry>
  
  <entry>
    <title>UVa 11349 - Symmetric Matrix</title>
    <link href="https://weilin1205.github.io/posts/uva11349.html"/>
    <id>https://weilin1205.github.io/posts/uva11349.html</id>
    <published>2023-05-27T13:51:41.000Z</published>
    <updated>2024-05-28T21:52:37.873Z</updated>
    
    <content type="html"><![CDATA[<h1>UVa 11349 - Symmetric Matrix</h1><div class="row">    <embed src="https://onlinejudge.org/external/113/11349.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><ul><li>題目的目標是要檢查給定的矩陣是否為<code>對稱矩陣</code>，例如，下面是一個3x3的<code>對稱矩陣</code>：<br>1  2  3<br>2  4  5<br>3  5  6<br>在這個矩陣中，主對角線上的元素是1、4和6，主對角線上方和下方的元素分別是2、3和5。由於主對角線上方和下方的元素相等，所以這個矩陣是對稱矩陣。</li><li><code>對稱矩陣</code>是指矩陣的主對角線上方和下方的元素相等的特殊矩陣。具體來說，如果一個方陣的第i行第j列的元素等於第j行第i列的元素，則該矩陣是對稱矩陣。</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li>程式的主要部分是一個while迴圈，根據輸入的測試案例數量(T)執行。在每個測試案例中，它會讀取一個字元n1、一個字元n2和一個整數size，然後宣告一個大小為size * size的長整數陣列table。</li><li>接下來，程式使用for迴圈讀取size * size個數字並將它們存儲在table陣列中。</li><li>接著，程式使用for迴圈檢查矩陣的對稱性。它以中間為對稱點，從最外圍的兩個數字開始比對，如果有任何數字不相等或小於0，就跳出迴圈。</li><li>最後，程式根據for迴圈的中斷條件輸出結果。如果迴圈完成了所有元素的比對，表示矩陣對稱，輸出&quot;Test #X: Symmetric.“；否則，輸出&quot;Test #X: Non-symmetric.”。其中，X表示測試案例的編號，cases變數用於追蹤測試案例的編號，每次測試案例完成後自增。</li></ul><div class="note info flat"><p>將二維陣列視為一維陣列來看是一個重要的觀念，舉例：<br>5 0 9<br>3 2 3   相當於  5 0 9 3 2 3 9 0 5<br>9 0 5</p></div><div class="note warning flat"><p>陷阱：本題測資相當巨大，需要使用<code>long long int</code>才能確保數字裝得下。</p></div><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2 </span><br><span class="line">N = 3 </span><br><span class="line">5 1 3 </span><br><span class="line">2 0 2 </span><br><span class="line">3 1 5 </span><br><span class="line">N = 3 </span><br><span class="line">5 1 3 </span><br><span class="line">2 0 2 </span><br><span class="line">0 1 5</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Test <span class="comment">#1: Symmetric. </span></span><br><span class="line">Test <span class="comment">#2: Non-symmetric.</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/11349"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T,cases=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">char</span> n1,n2;</span><br><span class="line">        <span class="type">int</span> size;</span><br><span class="line">        cin&gt;&gt;n1&gt;&gt;n2&gt;&gt;size;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> table[size*size];</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size*size;i++) &#123;</span><br><span class="line">            cin&gt;&gt;table[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//check</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size*size;i++) &#123; <span class="comment">//因為會以中間為對稱點，所以從最外圍兩個數字開始往中間去比對 </span></span><br><span class="line">            <span class="keyword">if</span>(table[i]!=table[(size*size<span class="number">-1</span>)-i]||table[i]&lt;<span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">//若數字不一樣或是數字小於0就中斷 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//output</span></span><br><span class="line">        <span class="keyword">if</span>(i==size*size) &#123; </span><br><span class="line">            <span class="comment">//如果迴圈沒有被中斷就是對稱矩陣</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test #&quot;</span>&lt;&lt;cases++&lt;&lt;<span class="string">&quot;: Symmetric.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test #&quot;</span>&lt;&lt;cases++&lt;&lt;<span class="string">&quot;: Non-symmetric.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">🎈UVa 11349 - Symmetric Matrix Accepted Solutions</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
    <category term="CPE" scheme="https://weilin1205.github.io/tags/CPE/"/>
    
  </entry>
  
  <entry>
    <title>UVa 11934 - Magic Formula</title>
    <link href="https://weilin1205.github.io/posts/uva11934.html"/>
    <id>https://weilin1205.github.io/posts/uva11934.html</id>
    <published>2023-05-27T12:50:40.000Z</published>
    <updated>2024-05-28T21:52:53.344Z</updated>
    
    <content type="html"><![CDATA[<h1>UVa 11934 - Magic Formula</h1><div class="row">    <embed src="https://onlinejudge.org/external/119/11934.pdf" width="100%" height="550" type="application/pdf"></div><p><strong>( Tip: 點擊左上方的三橫槓選單按鈕，可以收起左側 Pdf 頁。)</strong></p><h2 id="Step-1-題目概要">Step 1. 題目概要</h2><blockquote><p>有一個方程式<code>f(x) = ax^2 + bx + c</code>，問 有多少個<code>f(x)</code>可以被<code>d</code>給整除（<code>x</code>的範圍是從0~L）。</p></blockquote><ul><li>末列輸入 0 0 0 0 0 表示終止輸入</li></ul><h2 id="Step-2-解題思路">Step 2. 解題思路</h2><ul><li>可利用while迴圈，當輸入的a、b、c、d和l都不為零時執行。</li><li>在迴圈中的for迴圈用於遍歷從0到l的所有值。在每個值x上，它計算方程式(a<em>x</em>x + b*x + c) % d的結果，如果結果等於0，則將答案ans加1。最後，輸出答案ans。</li><li>整個程式的目的是計算給定方程式在給定範圍內有多少個解，並將結果輸出。</li></ul><h2 id="Step-3-範例輸入與輸出-Sample-Input-and-Output">Step 3. 範例輸入與輸出 - Sample Input and Output</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1"><i class="fas fa-vial"></i>Sample Input</button></li><li class="tab"><button type="button" data-href="#mytab-2"><i class="fas fa-tasks"></i>Sample Output</button></li><li class="tab"><button type="button" data-href="#mytab-3"><i class="fas fa-vector-square"></i>Extra Samples (人工測資)</button></li><li class="tab"><button type="button" data-href="#mytab-4"><i class="fas fa-wrench"></i>Useful Tools</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">6</span><br><span class="line">400 100 200 350 300 250</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">400</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol119/11934.in"   title="Extra Sample Input"><i class="fas fa-strikethrough"></i><span>Extra Sample Input</span></a><br><a class="btn-beautify red" href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol119/11934.out"   title="Extra Sample Output"><i class="fas fa-strikethrough"></i><span>Extra Sample Output</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p><a class="btn-beautify outline red" href="https://www.udebug.com/UVa/11934"   title="uDebug 快速連結"><i class="fas fa-bug"></i><span>uDebug 快速連結</span></a><br><a class="btn-beautify orange" href="https://www.diffnow.com/compare-clips"   title="Diffnow (線上比對程式)"><i class="fas fa-window-restore"></i><span>Diffnow (線上比對程式)</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/cpp-programming/online-compiler/"   title="C++ Online Compiler"><i class="fab fa-cuttlefish"></i><span>C++ Online Compiler</span></a><br><a class="btn-beautify blue" href="https://www.programiz.com/python-programming/online-compiler/"   title="Python Online Compiler"><i class="fab fa-python"></i><span>Python Online Compiler</span></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Step-4-參考程式碼-Accepted-Code">Step 4. 參考程式碼 - Accepted Code</h2><div class="tabs" id="name"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#name-1"><i class="fas fa-star-half-alt"></i>Solution 1 ( C++ )</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="name-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a,b,c,d,l;</span><br><span class="line">    <span class="keyword">while</span>((cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;l) &amp;&amp; !(a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span> &amp;&amp; c==<span class="number">0</span> &amp;&amp; d==<span class="number">0</span> &amp;&amp; l==<span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;=l;x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>((a*x*x+b*x+c)%d==<span class="number">0</span>) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">🎈UVa 11934 - Magic Formula Accepted Solutions</summary>
    
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/categories/UVa/"/>
    
    
    <category term="UVa" scheme="https://weilin1205.github.io/tags/UVa/"/>
    
  </entry>
  
  <entry>
    <title>ASCII Table</title>
    <link href="https://weilin1205.github.io/posts/ASCIITable.html"/>
    <id>https://weilin1205.github.io/posts/ASCIITable.html</id>
    <published>2023-05-02T04:02:04.000Z</published>
    <updated>2024-05-28T16:31:04.390Z</updated>
    
    <content type="html"><![CDATA[<h1>ASCII TABLE</h1><div class="note primary flat"><p><em>基本上只要記住三個基本<code>0(48)</code>、<code>A(65)</code>、<code>a(97)</code>ASCII的值，就可以推算出所有數字及字母的值。</em></p></div><table><thead><tr><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th></tr></thead><tbody><tr><td style="text-align:right"><strong>0</strong></td><td style="text-align:center">00</td><td style="text-align:left">NUL</td><td style="text-align:right"><strong>32</strong></td><td style="text-align:center">20</td><td style="text-align:left">space</td><td style="text-align:right"><strong>64</strong></td><td style="text-align:center">40</td><td style="text-align:left">@</td><td style="text-align:right"><strong>96</strong></td><td style="text-align:center">60</td><td style="text-align:left">`</td></tr><tr><td style="text-align:right"><strong>1</strong></td><td style="text-align:center">01</td><td style="text-align:left">SOH</td><td style="text-align:right"><strong>33</strong></td><td style="text-align:center">21</td><td style="text-align:left">!</td><td style="text-align:right"><font color=#FF0000><strong>65</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>41</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>A</strong></font></td><td style="text-align:right"><font color=#FF0000><strong>97</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>61</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>a</strong></font></td></tr><tr><td style="text-align:right"><strong>2</strong></td><td style="text-align:center">02</td><td style="text-align:left">STX</td><td style="text-align:right"><strong>34</strong></td><td style="text-align:center">22</td><td style="text-align:left">&quot;</td><td style="text-align:right"><strong>66</strong></td><td style="text-align:center">42</td><td style="text-align:left">B</td><td style="text-align:right"><strong>98</strong></td><td style="text-align:center">62</td><td style="text-align:left">b</td></tr><tr><td style="text-align:right"><strong>3</strong></td><td style="text-align:center">03</td><td style="text-align:left">ETX</td><td style="text-align:right"><strong>35</strong></td><td style="text-align:center">23</td><td style="text-align:left">#</td><td style="text-align:right"><strong>67</strong></td><td style="text-align:center">43</td><td style="text-align:left">C</td><td style="text-align:right"><strong>99</strong></td><td style="text-align:center">63</td><td style="text-align:left">c</td></tr><tr><td style="text-align:right"><strong>4</strong></td><td style="text-align:center">04</td><td style="text-align:left">EOT</td><td style="text-align:right"><strong>36</strong></td><td style="text-align:center">24</td><td style="text-align:left">$</td><td style="text-align:right"><strong>68</strong></td><td style="text-align:center">44</td><td style="text-align:left">D</td><td style="text-align:right"><strong>100</strong></td><td style="text-align:center">64</td><td style="text-align:left">d</td></tr><tr><td style="text-align:right"><strong>5</strong></td><td style="text-align:center">05</td><td style="text-align:left">ENQ</td><td style="text-align:right"><strong>37</strong></td><td style="text-align:center">25</td><td style="text-align:left">%</td><td style="text-align:right"><strong>69</strong></td><td style="text-align:center">45</td><td style="text-align:left">E</td><td style="text-align:right"><strong>101</strong></td><td style="text-align:center">65</td><td style="text-align:left">e</td></tr><tr><td style="text-align:right"><strong>6</strong></td><td style="text-align:center">06</td><td style="text-align:left">ACK</td><td style="text-align:right"><strong>38</strong></td><td style="text-align:center">26</td><td style="text-align:left">&amp;</td><td style="text-align:right"><strong>70</strong></td><td style="text-align:center">46</td><td style="text-align:left">F</td><td style="text-align:right"><strong>102</strong></td><td style="text-align:center">66</td><td style="text-align:left">f</td></tr><tr><td style="text-align:right"><strong>7</strong></td><td style="text-align:center">07</td><td style="text-align:left">BEL</td><td style="text-align:right"><strong>39</strong></td><td style="text-align:center">27</td><td style="text-align:left">’</td><td style="text-align:right"><strong>71</strong></td><td style="text-align:center">47</td><td style="text-align:left">G</td><td style="text-align:right"><strong>103</strong></td><td style="text-align:center">67</td><td style="text-align:left">g</td></tr><tr><td style="text-align:right"><strong>8</strong></td><td style="text-align:center">08</td><td style="text-align:left">BS</td><td style="text-align:right"><strong>40</strong></td><td style="text-align:center">28</td><td style="text-align:left">(</td><td style="text-align:right"><strong>72</strong></td><td style="text-align:center">48</td><td style="text-align:left">H</td><td style="text-align:right"><strong>104</strong></td><td style="text-align:center">68</td><td style="text-align:left">h</td></tr><tr><td style="text-align:right"><strong>9</strong></td><td style="text-align:center">09</td><td style="text-align:left">HT</td><td style="text-align:right"><strong>41</strong></td><td style="text-align:center">29</td><td style="text-align:left">)</td><td style="text-align:right"><strong>73</strong></td><td style="text-align:center">49</td><td style="text-align:left">I</td><td style="text-align:right"><strong>105</strong></td><td style="text-align:center">69</td><td style="text-align:left">i</td></tr><tr><td style="text-align:right"><strong>10</strong></td><td style="text-align:center">0A</td><td style="text-align:left">LF</td><td style="text-align:right"><strong>42</strong></td><td style="text-align:center">2A</td><td style="text-align:left">*</td><td style="text-align:right"><strong>74</strong></td><td style="text-align:center">4A</td><td style="text-align:left">J</td><td style="text-align:right"><strong>106</strong></td><td style="text-align:center">6A</td><td style="text-align:left">j</td></tr><tr><td style="text-align:right"><strong>11</strong></td><td style="text-align:center">0B</td><td style="text-align:left">VT</td><td style="text-align:right"><strong>43</strong></td><td style="text-align:center">2B</td><td style="text-align:left">+</td><td style="text-align:right"><strong>75</strong></td><td style="text-align:center">4B</td><td style="text-align:left">K</td><td style="text-align:right"><strong>107</strong></td><td style="text-align:center">6B</td><td style="text-align:left">k</td></tr><tr><td style="text-align:right"><strong>12</strong></td><td style="text-align:center">0C</td><td style="text-align:left">FF</td><td style="text-align:right"><strong>44</strong></td><td style="text-align:center">2C</td><td style="text-align:left">,</td><td style="text-align:right"><strong>76</strong></td><td style="text-align:center">4C</td><td style="text-align:left">L</td><td style="text-align:right"><strong>108</strong></td><td style="text-align:center">6C</td><td style="text-align:left">l</td></tr><tr><td style="text-align:right"><strong>13</strong></td><td style="text-align:center">0D</td><td style="text-align:left">CR</td><td style="text-align:right"><strong>45</strong></td><td style="text-align:center">2D</td><td style="text-align:left">-</td><td style="text-align:right"><strong>77</strong></td><td style="text-align:center">4D</td><td style="text-align:left">M</td><td style="text-align:right"><strong>109</strong></td><td style="text-align:center">6D</td><td style="text-align:left">m</td></tr><tr><td style="text-align:right"><strong>14</strong></td><td style="text-align:center">0E</td><td style="text-align:left">SO</td><td style="text-align:right"><strong>46</strong></td><td style="text-align:center">2E</td><td style="text-align:left">.</td><td style="text-align:right"><strong>78</strong></td><td style="text-align:center">4E</td><td style="text-align:left">N</td><td style="text-align:right"><strong>110</strong></td><td style="text-align:center">6E</td><td style="text-align:left">n</td></tr><tr><td style="text-align:right"><strong>15</strong></td><td style="text-align:center">0F</td><td style="text-align:left">SI</td><td style="text-align:right"><strong>47</strong></td><td style="text-align:center">2F</td><td style="text-align:left">/</td><td style="text-align:right"><strong>79</strong></td><td style="text-align:center">4F</td><td style="text-align:left">O</td><td style="text-align:right"><strong>111</strong></td><td style="text-align:center">6F</td><td style="text-align:left">o</td></tr><tr><td style="text-align:right"><strong>16</strong></td><td style="text-align:center">10</td><td style="text-align:left">DLE</td><td style="text-align:right"><font color=#FF0000><strong>48</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>30</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>0</strong></font></td><td style="text-align:right"><strong>80</strong></td><td style="text-align:center">50</td><td style="text-align:left">P</td><td style="text-align:right"><strong>112</strong></td><td style="text-align:center">70</td><td style="text-align:left">p</td></tr><tr><td style="text-align:right"><strong>17</strong></td><td style="text-align:center">11</td><td style="text-align:left">DC1</td><td style="text-align:right"><strong>49</strong></td><td style="text-align:center">31</td><td style="text-align:left">1</td><td style="text-align:right"><strong>81</strong></td><td style="text-align:center">51</td><td style="text-align:left">Q</td><td style="text-align:right"><strong>113</strong></td><td style="text-align:center">71</td><td style="text-align:left">q</td></tr><tr><td style="text-align:right"><strong>18</strong></td><td style="text-align:center">12</td><td style="text-align:left">DC2</td><td style="text-align:right"><strong>50</strong></td><td style="text-align:center">32</td><td style="text-align:left">2</td><td style="text-align:right"><strong>82</strong></td><td style="text-align:center">52</td><td style="text-align:left">R</td><td style="text-align:right"><strong>114</strong></td><td style="text-align:center">72</td><td style="text-align:left">r</td></tr><tr><td style="text-align:right"><strong>19</strong></td><td style="text-align:center">13</td><td style="text-align:left">DC3</td><td style="text-align:right"><strong>51</strong></td><td style="text-align:center">33</td><td style="text-align:left">3</td><td style="text-align:right"><strong>83</strong></td><td style="text-align:center">53</td><td style="text-align:left">S</td><td style="text-align:right"><strong>115</strong></td><td style="text-align:center">73</td><td style="text-align:left">s</td></tr><tr><td style="text-align:right"><strong>20</strong></td><td style="text-align:center">14</td><td style="text-align:left">DC4</td><td style="text-align:right"><strong>52</strong></td><td style="text-align:center">34</td><td style="text-align:left">4</td><td style="text-align:right"><strong>84</strong></td><td style="text-align:center">54</td><td style="text-align:left">T</td><td style="text-align:right"><strong>116</strong></td><td style="text-align:center">74</td><td style="text-align:left">t</td></tr><tr><td style="text-align:right"><strong>21</strong></td><td style="text-align:center">15</td><td style="text-align:left">NAK</td><td style="text-align:right"><strong>53</strong></td><td style="text-align:center">35</td><td style="text-align:left">5</td><td style="text-align:right"><strong>85</strong></td><td style="text-align:center">55</td><td style="text-align:left">U</td><td style="text-align:right"><strong>117</strong></td><td style="text-align:center">75</td><td style="text-align:left">u</td></tr><tr><td style="text-align:right"><strong>22</strong></td><td style="text-align:center">16</td><td style="text-align:left">SYN</td><td style="text-align:right"><strong>54</strong></td><td style="text-align:center">36</td><td style="text-align:left">6</td><td style="text-align:right"><strong>86</strong></td><td style="text-align:center">56</td><td style="text-align:left">V</td><td style="text-align:right"><strong>118</strong></td><td style="text-align:center">76</td><td style="text-align:left">v</td></tr><tr><td style="text-align:right"><strong>23</strong></td><td style="text-align:center">17</td><td style="text-align:left">ETB</td><td style="text-align:right"><strong>55</strong></td><td style="text-align:center">37</td><td style="text-align:left">7</td><td style="text-align:right"><strong>87</strong></td><td style="text-align:center">57</td><td style="text-align:left">W</td><td style="text-align:right"><strong>119</strong></td><td style="text-align:center">77</td><td style="text-align:left">w</td></tr><tr><td style="text-align:right"><strong>24</strong></td><td style="text-align:center">18</td><td style="text-align:left">CAN</td><td style="text-align:right"><strong>56</strong></td><td style="text-align:center">38</td><td style="text-align:left">8</td><td style="text-align:right"><strong>88</strong></td><td style="text-align:center">58</td><td style="text-align:left">X</td><td style="text-align:right"><strong>120</strong></td><td style="text-align:center">78</td><td style="text-align:left">x</td></tr><tr><td style="text-align:right"><strong>25</strong></td><td style="text-align:center">19</td><td style="text-align:left">EM</td><td style="text-align:right"><strong>57</strong></td><td style="text-align:center">39</td><td style="text-align:left">9</td><td style="text-align:right"><strong>89</strong></td><td style="text-align:center">59</td><td style="text-align:left">Y</td><td style="text-align:right"><strong>121</strong></td><td style="text-align:center">79</td><td style="text-align:left">y</td></tr><tr><td style="text-align:right"><strong>26</strong></td><td style="text-align:center">1A</td><td style="text-align:left">SUB</td><td style="text-align:right"><strong>58</strong></td><td style="text-align:center">3A</td><td style="text-align:left">:</td><td style="text-align:right"><strong>90</strong></td><td style="text-align:center">5A</td><td style="text-align:left">Z</td><td style="text-align:right"><strong>122</strong></td><td style="text-align:center">7A</td><td style="text-align:left">z</td></tr><tr><td style="text-align:right"><strong>27</strong></td><td style="text-align:center">1B</td><td style="text-align:left">ESC</td><td style="text-align:right"><strong>59</strong></td><td style="text-align:center">3B</td><td style="text-align:left">;</td><td style="text-align:right"><strong>91</strong></td><td style="text-align:center">5B</td><td style="text-align:left">[</td><td style="text-align:right"><strong>123</strong></td><td style="text-align:center">7B</td><td style="text-align:left">{</td></tr><tr><td style="text-align:right"><strong>28</strong></td><td style="text-align:center">1C</td><td style="text-align:left">FS</td><td style="text-align:right"><strong>60</strong></td><td style="text-align:center">3C</td><td style="text-align:left">&lt;</td><td style="text-align:right"><strong>92</strong></td><td style="text-align:center">5C</td><td style="text-align:left">\</td><td style="text-align:right"><strong>124</strong></td><td style="text-align:center">7C</td><td style="text-align:left">|</td></tr><tr><td style="text-align:right"><strong>29</strong></td><td style="text-align:center">1D</td><td style="text-align:left">GS</td><td style="text-align:right"><strong>61</strong></td><td style="text-align:center">3D</td><td style="text-align:left">=</td><td style="text-align:right"><strong>93</strong></td><td style="text-align:center">5D</td><td style="text-align:left">]</td><td style="text-align:right"><strong>125</strong></td><td style="text-align:center">7D</td><td style="text-align:left">}</td></tr><tr><td style="text-align:right"><strong>30</strong></td><td style="text-align:center">1E</td><td style="text-align:left">RS</td><td style="text-align:right"><strong>62</strong></td><td style="text-align:center">3E</td><td style="text-align:left">&gt;</td><td style="text-align:right"><strong>94</strong></td><td style="text-align:center">5E</td><td style="text-align:left">^</td><td style="text-align:right"><strong>126</strong></td><td style="text-align:center">7E</td><td style="text-align:left">~</td></tr><tr><td style="text-align:right"><strong>31</strong></td><td style="text-align:center">1F</td><td style="text-align:left">US</td><td style="text-align:right"><strong>63</strong></td><td style="text-align:center">3F</td><td style="text-align:left">?</td><td style="text-align:right"><strong>95</strong></td><td style="text-align:center">5F</td><td style="text-align:left">_</td><td style="text-align:right"><strong>127</strong></td><td style="text-align:center">7F</td><td style="text-align:left">DEL</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">🛠️ASCII Table</summary>
    
    
    
    <category term="UsefulTools" scheme="https://weilin1205.github.io/categories/UsefulTools/"/>
    
    
    <category term="UsefulTools" scheme="https://weilin1205.github.io/tags/UsefulTools/"/>
    
  </entry>
  
</feed>
