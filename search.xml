<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LeetCode-63 Unique Paths II</title>
      <link href="/posts/576414d3.html"/>
      <url>/posts/576414d3.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/unique-paths-ii/description/">https://leetcode.com/problems/unique-paths-ii/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; obstacleGrid)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m = obstacleGrid.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n = obstacleGrid[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (obstacleGrid[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">1</span> || obstacleGrid[m - <span class="number">1</span>][n - <span class="number">1</span>] == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">// 起點終點可以是障礙物，所以直接輸出為0種方式</span></span><br><span class="line">        vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(m, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 初始化dp，一開始先全部設為零</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (obstacleGrid[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                    dp[i][j] = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">// 如果踢到鐵板，也就是目前搜到的格子是障礙物，則直接把可以通到那格的方法數設為零</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = <span class="number">1</span>;</span><br><span class="line">                        <span class="comment">// 起點的方法數是1</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = dp[i][j - <span class="number">1</span>];</span><br><span class="line">                        <span class="comment">// 如果已經在最上邊，則方法只可能來自該格子的左邊</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>) &#123;</span><br><span class="line">                        dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">                        <span class="comment">// 如果已經在最左邊，則方法只可能來自該格子的上邊</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        dp[i][j] = dp[i - <span class="number">1</span>][j] + dp[i][j - <span class="number">1</span>];</span><br><span class="line">                        <span class="comment">// 如果在其餘位置，則方法數會來自於該格子左邊與上邊的相加</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Time Complex is O(mn)</span></span><br><span class="line"><span class="comment">// Space Complex is O(mn)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  The following is my original solution (Accepted), but not as pretty as above.</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">public:</span></span><br><span class="line"><span class="comment">    int uniquePathsWithObstacles(vector&lt;vector&lt;int&gt;&gt;&amp; obstacleGrid) &#123;</span></span><br><span class="line"><span class="comment">        int m=obstacleGrid.size();</span></span><br><span class="line"><span class="comment">        int n=obstacleGrid[0].size();</span></span><br><span class="line"><span class="comment">        if(obstacleGrid[0][0]==1) return 0;</span></span><br><span class="line"><span class="comment">        if(obstacleGrid[m-1][n-1]==1) return 0;</span></span><br><span class="line"><span class="comment">        vector&lt;vector&lt;int&gt;&gt; dp(m,vector&lt;int&gt;(n,0));</span></span><br><span class="line"><span class="comment">        for(int i=0;i&lt;m;i++) &#123;</span></span><br><span class="line"><span class="comment">            if(obstacleGrid[i][0]==1) break;</span></span><br><span class="line"><span class="comment">            dp[i][0]=1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        for(int i=0;i&lt;n;i++) &#123;</span></span><br><span class="line"><span class="comment">            if(obstacleGrid[0][i]==1) break;</span></span><br><span class="line"><span class="comment">            dp[0][i]=1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        for(int i=1;i&lt;m;i++) &#123;</span></span><br><span class="line"><span class="comment">            for(int j=1;j&lt;n;j++) &#123;</span></span><br><span class="line"><span class="comment">                if(obstacleGrid[i-1][j]==1 &amp;&amp; obstacleGrid[i][j-1]==0) &#123;</span></span><br><span class="line"><span class="comment">                    dp[i][j]=dp[i][j-1];</span></span><br><span class="line"><span class="comment">                &#125; else if(obstacleGrid[i-1][j]==0 &amp;&amp; obstacleGrid[i][j-1]==1) &#123;</span></span><br><span class="line"><span class="comment">                    dp[i][j]=dp[i-1][j];</span></span><br><span class="line"><span class="comment">                &#125; else if (obstacleGrid[i-1][j]==1 &amp;&amp; obstacleGrid[i][j-1]==1) &#123;</span></span><br><span class="line"><span class="comment">                    dp[i][j]=0;</span></span><br><span class="line"><span class="comment">                &#125; else &#123;</span></span><br><span class="line"><span class="comment">                    dp[i][j]=dp[i-1][j]+dp[i][j-1];</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return dp[m-1][n-1];</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-120 Triangle</title>
      <link href="/posts/caf4976a.html"/>
      <url>/posts/caf4976a.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/triangle/description/">https://leetcode.com/problems/triangle/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimumTotal</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> m=triangle.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> n=triangle[m<span class="number">-1</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++) &#123;</span><br><span class="line">            triangle[i][<span class="number">0</span>]+=triangle[i<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            triangle[i][i]+=triangle[i<span class="number">-1</span>][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;m;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n&amp;&amp;j&lt;i;j++) &#123;</span><br><span class="line">                triangle[i][j]+=<span class="built_in">min</span>(triangle[i<span class="number">-1</span>][j],triangle[i<span class="number">-1</span>][j<span class="number">-1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans=triangle[m<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(triangle[m<span class="number">-1</span>][i]&lt;ans) &#123;</span><br><span class="line">                ans=triangle[m<span class="number">-1</span>][i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-198 House Robber</title>
      <link href="/posts/6c607518.html"/>
      <url>/posts/6c607518.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/house-robber/description/">https://leetcode.com/problems/house-robber/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">rob</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dp[i] = max(dp[i-1], dp[i-2]+nums[i])</span></span><br><span class="line">        <span class="comment">// 1： dp[i-1] 表示強盜不搶當前房屋，但確定是他會搶前i-1那間房屋</span></span><br><span class="line">        <span class="comment">// 2： dp[i-2]+nums[i] 表示搶劫當前房屋+ 掠奪之前房屋的物品</span></span><br><span class="line">        <span class="type">int</span> dp[<span class="number">1000</span>];</span><br><span class="line">        dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">        dp[<span class="number">1</span>]=<span class="built_in">max</span>(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i++) &#123;</span><br><span class="line">            dp[i]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>],dp[i<span class="number">-2</span>]+nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[n<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-74 Search a 2D Matrix</title>
      <link href="/posts/195b8427.html"/>
      <url>/posts/195b8427.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/search-a-2d-matrix/description/">https://leetcode.com/problems/search-a-2d-matrix/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">searchMatrix</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; &amp;matrix, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = matrix.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> m = matrix[<span class="number">0</span>].<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = m * n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l != r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l + r - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (matrix[mid / m][mid % m] &lt; target)</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">                r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> matrix[r / m][r % m] == target;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-931 Minimum Falling Path Sum</title>
      <link href="/posts/aa758891.html"/>
      <url>/posts/aa758891.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>Problem: <a href="https://leetcode.com/problems/minimum-falling-path-sum/description/">https://leetcode.com/problems/minimum-falling-path-sum/description/</a></p></div><h2 id="Accepted-Code">Accepted Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minFallingPathSum</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; matrix)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = matrix.<span class="built_in">size</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">0</span>) &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j],matrix[i<span class="number">-1</span>][j+<span class="number">1</span>]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(j==n<span class="number">-1</span>) &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j<span class="number">-1</span>],matrix[i<span class="number">-1</span>][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    matrix[i][j]+=<span class="built_in">min</span>(<span class="built_in">min</span>(matrix[i<span class="number">-1</span>][j<span class="number">-1</span>],matrix[i<span class="number">-1</span>][j]),matrix[i<span class="number">-1</span>][j+<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans=matrix[n<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(matrix[n<span class="number">-1</span>][i]&lt;ans) &#123;</span><br><span class="line">                ans=matrix[n<span class="number">-1</span>][i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01 knapsack</title>
      <link href="/posts/8e7008e1.html"/>
      <url>/posts/8e7008e1.html</url>
      
        <content type="html"><![CDATA[<h1>01 knapsack</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> N = <span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> backpack = <span class="number">10</span>; <span class="comment">// 背包容量</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; weight = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; value = &#123;<span class="number">0</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">dp</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(backpack + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">    vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">chosen</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(backpack + <span class="number">1</span>, <span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= backpack; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (weight[i] &lt;= j) &#123;</span><br><span class="line">                dp[i][j] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weight[i]] + value[i]);</span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &gt; dp[i - <span class="number">1</span>][j]) &#123;</span><br><span class="line">                    <span class="comment">// 如果dp[i][j]不是來自於上面dp[i-1][j]，就代表物品i有被選取</span></span><br><span class="line">                    <span class="comment">// 詳細參考https://www.geeksforgeeks.org/printing-items-01-knapsack/</span></span><br><span class="line">                    chosen[i][j] = <span class="literal">true</span>; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;max value: &quot;</span> &lt;&lt; dp[N][backpack] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过 chosen 数组来找出所选择的物品</span></span><br><span class="line">    <span class="type">int</span> i = N, j = backpack;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; selectedItems;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span> &amp;&amp; j &gt; <span class="number">0</span>) &#123; <span class="comment">// 物品序號&gt;0 &amp;&amp; 可用空間&gt;0</span></span><br><span class="line">        <span class="keyword">if</span> (chosen[i][j]) &#123; <span class="comment">// 若有被選擇</span></span><br><span class="line">            selectedItems.<span class="built_in">push_back</span>(i); <span class="comment">// 加入被選向量(selectedItems)中</span></span><br><span class="line">            j -= weight[i]; <span class="comment">// 可用空間扣掉該物品重量</span></span><br><span class="line">        &#125;</span><br><span class="line">        i--; <span class="comment">// 物品序號-1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;selected: &quot;</span>; <span class="comment">// 注意，要&quot;逆&quot;向輸出這樣東西才會保持原來的順序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = selectedItems.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        cout &lt;&lt; selectedItems[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="好資源">好資源</h3><ul><li>01背包，包含路徑回朔：<a href="https://www.geeksforgeeks.org/printing-items-01-knapsack/">https://www.geeksforgeeks.org/printing-items-01-knapsack/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> knapsack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-9 Palindrome Number</title>
      <link href="/posts/47df93d3.html"/>
      <url>/posts/47df93d3.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/palindrome-number/">https://leetcode.com/problems/palindrome-number/</a></p></div><h2 id="題目概要">題目概要</h2><p>題目給你一個整數，請你判斷是否為<code>回文數</code>。</p><div class="note info flat"><p>回文數：係指一個數字在反轉之後仍然保持不變的數字，例如<code>35651</code>、<code>398893</code>、<code>9009</code>、<code>212373212</code>等。</p></div><h2 id="解題思路">解題思路</h2><blockquote><p>判斷回文數的一種常見方法是將數值轉換成字符串，然後將字符串反轉並與原始字符串比較。這種方法雖然簡單易懂，但是效率較低，尤其是在處理大量數字時。建議使用下面的方法會更為合適。</p></blockquote><p>要判斷一個數值是否為回文數：</p><ul><li>首先，如果數字為<code>負數</code>或是<code>以0結尾</code>，則不可能是回文數。</li><li>接著製造一個<code>反轉數字rev</code>。</li><li>最後讓兩個數字去對比，確認反轉數字是否為原來數字的回文數：<ul><li>如果數字長度為偶數，則 x == reversed</li><li>如果數字長度為奇數，則 x == reversed / 10</li></ul></li></ul><h2 id="參考程式碼">參考程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果數字為負數或是以0結尾，則不可能是回文數。</span></span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 製造一個反轉數字</span></span><br><span class="line">    <span class="type">int</span> rev = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &gt; rev) &#123;</span><br><span class="line">        rev = rev * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果數字長度為偶數，則 x == reversed</span></span><br><span class="line">    <span class="comment">// 如果數字長度為奇數，則 x == reversed / 10</span></span><br><span class="line">    <span class="keyword">return</span> x == rev || x == rev / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ Data Type Ranges</title>
      <link href="/posts/Cpp-Data-Type-Ranges.html"/>
      <url>/posts/Cpp-Data-Type-Ranges.html</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th><strong>Type Name</strong></th><th><strong>Bytes</strong></th><th><strong>Other Names</strong></th><th><strong>Range of Values</strong></th></tr></thead><tbody><tr><td>int</td><td>4</td><td>signed</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned int</td><td>4</td><td>unsigned</td><td>0 to 4,294,967,295</td></tr><tr><td>__int8</td><td>1</td><td>char</td><td>-128 to 127</td></tr><tr><td>unsigned __int8</td><td>1</td><td>unsigned char</td><td>0 to 255</td></tr><tr><td>__int16</td><td>2</td><td>short, short int, signed short int</td><td>-32,768 to 32,767</td></tr><tr><td>unsigned __int16</td><td>2</td><td>unsigned short, unsigned short int</td><td>0 to 65,535</td></tr><tr><td>__int32</td><td>4</td><td>signed, signed int, int</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned __int32</td><td>4</td><td>unsigned, unsigned int</td><td>0 to 4,294,967,295</td></tr><tr><td>__int64</td><td>8</td><td>long long, signed long long</td><td>-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td></tr><tr><td>unsigned __int64</td><td>8</td><td>unsigned long long</td><td>0 to 18,446,744,073,709,551,615</td></tr><tr><td>bool</td><td>1</td><td>none</td><td>false or true</td></tr><tr><td>char</td><td>1</td><td>none</td><td>-128 to 127 by default  0 to 255 when compiled by using /J</td></tr><tr><td>signed char</td><td>1</td><td>none</td><td>-128 to 127</td></tr><tr><td>unsigned char</td><td>1</td><td>none</td><td>0 to 255</td></tr><tr><td>short</td><td>2</td><td>short int, signed short int</td><td>-32,768 to 32,767</td></tr><tr><td>unsigned short</td><td>2</td><td>unsigned short int</td><td>0 to 65,535</td></tr><tr><td>long</td><td>4</td><td>long int, signed long int</td><td>-2,147,483,648 to 2,147,483,647</td></tr><tr><td>unsigned long</td><td>4</td><td>unsigned long int</td><td>0 to 4,294,967,295</td></tr><tr><td>long long</td><td>8</td><td>none (but equivalent to __int64)</td><td>-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807</td></tr><tr><td>unsigned long long</td><td>8</td><td>none (but equivalent to unsigned __int64)</td><td>0 to 18,446,744,073,709,551,615</td></tr><tr><td>enum</td><td>varies</td><td>none</td><td></td></tr><tr><td>float</td><td>4</td><td>none</td><td>3.4E +/- 38 (7 digits)</td></tr><tr><td>double</td><td>8</td><td>none</td><td>1.7E +/- 308 (15 digits)</td></tr><tr><td>long double</td><td>same as double</td><td>none</td><td>Same as double</td></tr><tr><td>wchar_t</td><td>2</td><td>__wchar_t</td><td>0 to 65,535</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> UsefulTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UsefulTools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-10055 Hashmat the brave warrior</title>
      <link href="/posts/UVa-10055-Hashmat-the-brave-warrior.html"/>
      <url>/posts/UVa-10055-Hashmat-the-brave-warrior.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/100/10055.pdf">https://onlinejudge.org/external/100/10055.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>Hashmat是一位勇敢的戰士，他帶領著一群年輕的士兵從一個地方移動到另一個地方與敵人戰鬥。在戰鬥之前，他只計算一件事，那就是他的士兵人數和對手的士兵人數之間的差異。根據這個差異，他再決定是否要戰鬥。Hashmat的士兵人數永遠不會超過對手的士兵人數。</p></blockquote><ul><li>每行輸入包含兩個數字。這兩個數字分別表示Hashmat的軍隊或是對手的軍隊的士兵數量，兩者可能顛倒放置。</li><li>輸出兩方士兵數量的差距即可。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>很簡單，就把題目給的兩個數字相減再取個絕對值即可。</li><li>僅需注意測資的大小，測資範圍到2^32，所以不能只用int，需要使用long long int。</li></ul><a class="btn-beautify blue larger" href="https://weilin1205.github.io/posts/Cpp-Data-Type-Ranges.html"   title="C++ Data Type Ranges"><i class="far fa-hand-point-right"></i><span>C++ Data Type Ranges</span></a><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10055.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10055.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/10055"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> a,b; <span class="comment">//測資範圍到2^32，所以不能只用int</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b) &#123;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">abs</span>(b-a)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> CPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Selected Inspirational Quotes</title>
      <link href="/posts/25ea6b11.html"/>
      <url>/posts/25ea6b11.html</url>
      
        <content type="html"><![CDATA[<h1>Selected Inspirational Quotes</h1><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>駕馭命運的舵是奮鬥。不放手一絲可能，不屏棄一點機會，不停止一日努力！<br>The helm that steers destiny is perseverance. Hold on to every thread of possibility, never abandon a chance, and never cease striving, even for a single day!</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>真正成功的人生，不在於成就的大小，而在於你是否努力地去實現自我，喊出自己的聲音，走出屬於自己的道路！<br>True success in life lies not in the magnitude of achievements, but in whether you strive to actualize yourself, raise your voice, and forge your own path!</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>梯子的梯階從來不是用來擱腳的，它只是讓一隻腳暫放一段時間，讓另一隻腳能夠再往上蹬！<br>The rungs of a ladder were never meant for resting your feet; they merely provide a temporary pause for one foot, enabling the other foot to push higher!</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>志在峰巔的攀登者，不會陶醉在沿途的某個腳印之中！<br>The climber aspiring to reach the summit will not be captivated by a single footprint along the way!</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>一個人最大的敵人是自己，沒有完不成的任務，只有失去信心的自己！<br>One’s greatest enemy is oneself; there are no tasks that cannot be accomplished, only a self devoid of confidence!</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>比你差的人沒放棄，比你好的人仍在努力，你有什麼資格說自己無能為力！<br>Those who are less capable than you haven’t given up, and those who are better than you are still striving. What right do you have to claim powerlessness?</p></div><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>用最少的悔恨面對過去。用最少的浪費面對現在。用最多的夢想面對未來！<br>Face the past with the least amount of regret. Face the present with the least amount of waste. Face the future with the greatest abundance of dreams!</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>風帆，不掛在桅杆上，是一塊無用的布；桅杆，不掛上風帆，是一根平常的柱；理想，不付諸行動，是虛無縹緲的霧；行動，卻沒有理想，是徒走沒有盡頭的路！<br>A sail, without being hoisted on the mast, is but a useless cloth; a mast, without a sail, is merely an ordinary pillar; an ideal, without being put into action, is a hazy mist of nothingness; action, without an ideal, is walking a path with no end in sight!</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>再長的路，一步步也能走完，再短的路，不邁開雙腳也無法到達！<br>No matter how long the journey, it can be completed step by step; no matter how short the path, it cannot be reached without taking a step forward!</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>看起來比登天還難的事，有時卻輕而易舉地做到，差別就在信念！<br>What may appear more difficult than reaching the heavens can sometimes be achieved effortlessly, and the difference lies in one’s belief!</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>不要為小事遮住視線，我們還有更大的世界！<br>Do not let trivial matters obstruct your vision; there is a greater world awaiting us!</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>有胸懷去接受不能改變的事，有勇氣取改變能改變的事，有智慧去分辨兩者的不同！<br>Have the openness to accept what cannot be changed, the courage to change what can be changed, and the wisdom to discern the difference between the two!</p></div><div class="note red icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>別總是抱怨生活不夠幸運，是你欠了生活一份努力，每一個你討厭的現在，都有一個不夠努力的曾經，未來美不美，取決於你現在拼不拼！<br>Don’t constantly complain about life not being lucky enough; it is you who owes life an effort. Every present moment you dislike has a past where you didn’t strive hard enough. The beauty of the future depends on whether you are willing to give it your all right now!</p></div><div class="note pink icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>人生偉業的建立，不在能知，乃在能行！<br>The establishment of great accomplishments in life lies not in knowing, but in doing!</p></div><div class="note orange icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>世上沒有白費的努力，也沒有碰巧的成功，一切無心插柳，其實都是水到渠成。人生沒有白走的路，也沒有白吃的苦，跨出去的每一步，都是未來的基石與鋪墊！<br>There are no efforts in vain in this world, nor are there coincidental successes. Everything that happens effortlessly is actually a result of being in the right place at the right time. In life, no path is walked in vain, and no hardship is endured without purpose. Every step taken paves the way and lays the foundation for the future!</p></div><div class="note purple icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>成功不是將來才有的，而是從決定去做的那一刻起，持續地累積！<br>Success is not something that only exists in the future; it is accumulated continuously from the moment you make the decision to act.</p></div><div class="note green icon-padding flat"><i class="note-icon fa-solid fa-heart"></i><p>只要有一分機會，我也會為那一分而努力，努力到無可努力為止，再淡然接受結果，這只不過是為了在驀然回首之時，能無愧於生命中的自己！<br>As long as there is even a slight chance, I will strive for that chance with all my might, pushing myself until there is nothing more to give. And then, I will accept the outcome with serenity, knowing that it is all to ensure that when I look back one day, I will have no regrets in my journey of life.</p></div><div class="note blue icon-padding flat"><i class="note-icon fa-solid fa-heart-pulse"></i><p>生命就是一杯清茶，就是一曲歌謠，就是一首耐人尋味的小詩！讓我們一路行走，一路品味，一路經歷，靜靜享受這美麗的人生！<br>Life is like a cup of clear tea, a melody of a song, a thought-provoking poem. Let us journey together, savoring every step, experiencing every moment, quietly savoring the beauty of this precious life!</p></div>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UVa-11349 Symmetric Matrix</title>
      <link href="/posts/UVa-11349-Symmetric-Matrix.html"/>
      <url>/posts/UVa-11349-Symmetric-Matrix.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/113/11349.pdf">https://onlinejudge.org/external/113/11349.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>題目的目標是要檢查給定的矩陣是否為<code>對稱矩陣</code>，例如，下面是一個3x3的<code>對稱矩陣</code>：<br>1  2  3<br>2  4  5<br>3  5  6<br>在這個矩陣中，主對角線上的元素是1、4和6，主對角線上方和下方的元素分別是2、3和5。由於主對角線上方和下方的元素相等，所以這個矩陣是對稱矩陣。</p></blockquote><ul><li><code>對稱矩陣</code>是指矩陣的主對角線上方和下方的元素相等的特殊矩陣。具體來說，如果一個方陣的第i行第j列的元素等於第j行第i列的元素，則該矩陣是對稱矩陣。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><div class="note warning flat"><p>陷阱：本題測資相當巨大，需要使用<code>long long int</code>才能確保數字裝得下。</p></div><ul><li>程式的主要部分是一個while迴圈，根據輸入的測試案例數量(T)執行。在每個測試案例中，它會讀取一個字元n1、一個字元n2和一個整數size，然後宣告一個大小為size * size的長整數陣列table。</li><li>接下來，程式使用for迴圈讀取size * size個數字並將它們存儲在table陣列中。</li><li>接著，程式使用for迴圈檢查矩陣的對稱性。它以中間為對稱點，從最外圍的兩個數字開始比對，如果有任何數字不相等或小於0，就跳出迴圈。</li><li>最後，程式根據for迴圈的中斷條件輸出結果。如果迴圈完成了所有元素的比對，表示矩陣對稱，輸出&quot;Test #X: Symmetric.“；否則，輸出&quot;Test #X: Non-symmetric.”。其中，X表示測試案例的編號，cases變數用於追蹤測試案例的編號，每次測試案例完成後自增。</li></ul><div class="note info flat"><p>將二維陣列視為一維陣列來看是一個重要的觀念，舉例：<br>5 0 9<br>3 2 3   相當於  5 0 9 3 2 3 9 0 5<br>9 0 5</p></div><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.in">Sample Input01</a> || <a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.in">Sample Input02</a> || <a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.in">Sample Input03</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.out">Sample Output01</a> || <a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.out">Sample Output02</a> || <a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11349.out">Sample Output03</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="線上快速比對程式"><i class="far fa-hand-point-right"></i><span>線上快速比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/11349"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T,cases=<span class="number">1</span>;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">char</span> n1,n2;</span><br><span class="line">        <span class="type">int</span> size;</span><br><span class="line">        cin&gt;&gt;n1&gt;&gt;n2&gt;&gt;size;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> table[size*size];</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size*size;i++) &#123;</span><br><span class="line">            cin&gt;&gt;table[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//check</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size*size;i++) &#123; <span class="comment">//因為會以中間為對稱點，所以從最外圍兩個數字開始往中間去比對 </span></span><br><span class="line">            <span class="keyword">if</span>(table[i]!=table[(size*size<span class="number">-1</span>)-i]||table[i]&lt;<span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">//若數字不一樣或是數字小於0就中斷 </span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//output</span></span><br><span class="line">        <span class="keyword">if</span>(i==size*size) &#123; </span><br><span class="line">            <span class="comment">//如果迴圈沒有被中斷就是對稱矩陣</span></span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test #&quot;</span>&lt;&lt;cases++&lt;&lt;<span class="string">&quot;: Symmetric.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Test #&quot;</span>&lt;&lt;cases++&lt;&lt;<span class="string">&quot;: Non-symmetric.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> CPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-11934 Magic Formula</title>
      <link href="/posts/UVa-11934-Magic-Formula.html"/>
      <url>/posts/UVa-11934-Magic-Formula.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/119/11934.pdf">https://onlinejudge.org/external/119/11934.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>有一個方程式<code>f(x) = ax^2 + bx + c</code>，問 有多少個<code>f(x)</code>可以被<code>d</code>給整除（<code>x</code>的範圍是從0~L）。</p></blockquote><ul><li>末列輸入 0 0 0 0 0 表示終止輸入</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>可利用while迴圈，當輸入的a、b、c、d和l都不為零時執行。</li><li>在迴圈中的for迴圈用於遍歷從0到l的所有值。在每個值x上，它計算方程式(a<em>x</em>x + b*x + c) % d的結果，如果結果等於0，則將答案ans加1。最後，輸出答案ans。</li><li>整個程式的目的是計算給定方程式在給定範圍內有多少個解，並將結果輸出。</li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol119/11934.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol119/11934.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/11934"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a,b,c,d,l;</span><br><span class="line">    <span class="keyword">while</span>((cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;l) &amp;&amp; !(a==<span class="number">0</span> &amp;&amp; b==<span class="number">0</span> &amp;&amp; c==<span class="number">0</span> &amp;&amp; d==<span class="number">0</span> &amp;&amp; l==<span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>;x&lt;=l;x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>((a*x*x+b*x+c)%d==<span class="number">0</span>) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASCII Table</title>
      <link href="/posts/ASCIITable.html"/>
      <url>/posts/ASCIITable.html</url>
      
        <content type="html"><![CDATA[<h1>ASCII TABLE</h1><div class="note primary flat"><p><em>基本上只要記住三個基本<code>0(48)</code>、<code>A(65)</code>、<code>a(97)</code>ASCII的值，就可以推算出所有數字及字母的值。</em></p></div><table><thead><tr><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th><th style="text-align:right">Dec</th><th style="text-align:center">Hex</th><th style="text-align:left">CHAR</th></tr></thead><tbody><tr><td style="text-align:right"><strong>0</strong></td><td style="text-align:center">00</td><td style="text-align:left">NUL</td><td style="text-align:right"><strong>32</strong></td><td style="text-align:center">20</td><td style="text-align:left">space</td><td style="text-align:right"><strong>64</strong></td><td style="text-align:center">40</td><td style="text-align:left">@</td><td style="text-align:right"><strong>96</strong></td><td style="text-align:center">60</td><td style="text-align:left">`</td></tr><tr><td style="text-align:right"><strong>1</strong></td><td style="text-align:center">01</td><td style="text-align:left">SOH</td><td style="text-align:right"><strong>33</strong></td><td style="text-align:center">21</td><td style="text-align:left">!</td><td style="text-align:right"><font color=#FF0000><strong>65</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>41</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>A</strong></font></td><td style="text-align:right"><font color=#FF0000><strong>97</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>61</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>a</strong></font></td></tr><tr><td style="text-align:right"><strong>2</strong></td><td style="text-align:center">02</td><td style="text-align:left">STX</td><td style="text-align:right"><strong>34</strong></td><td style="text-align:center">22</td><td style="text-align:left">&quot;</td><td style="text-align:right"><strong>66</strong></td><td style="text-align:center">42</td><td style="text-align:left">B</td><td style="text-align:right"><strong>98</strong></td><td style="text-align:center">62</td><td style="text-align:left">b</td></tr><tr><td style="text-align:right"><strong>3</strong></td><td style="text-align:center">03</td><td style="text-align:left">ETX</td><td style="text-align:right"><strong>35</strong></td><td style="text-align:center">23</td><td style="text-align:left">#</td><td style="text-align:right"><strong>67</strong></td><td style="text-align:center">43</td><td style="text-align:left">C</td><td style="text-align:right"><strong>99</strong></td><td style="text-align:center">63</td><td style="text-align:left">c</td></tr><tr><td style="text-align:right"><strong>4</strong></td><td style="text-align:center">04</td><td style="text-align:left">EOT</td><td style="text-align:right"><strong>36</strong></td><td style="text-align:center">24</td><td style="text-align:left">$</td><td style="text-align:right"><strong>68</strong></td><td style="text-align:center">44</td><td style="text-align:left">D</td><td style="text-align:right"><strong>100</strong></td><td style="text-align:center">64</td><td style="text-align:left">d</td></tr><tr><td style="text-align:right"><strong>5</strong></td><td style="text-align:center">05</td><td style="text-align:left">ENQ</td><td style="text-align:right"><strong>37</strong></td><td style="text-align:center">25</td><td style="text-align:left">%</td><td style="text-align:right"><strong>69</strong></td><td style="text-align:center">45</td><td style="text-align:left">E</td><td style="text-align:right"><strong>101</strong></td><td style="text-align:center">65</td><td style="text-align:left">e</td></tr><tr><td style="text-align:right"><strong>6</strong></td><td style="text-align:center">06</td><td style="text-align:left">ACK</td><td style="text-align:right"><strong>38</strong></td><td style="text-align:center">26</td><td style="text-align:left">&amp;</td><td style="text-align:right"><strong>70</strong></td><td style="text-align:center">46</td><td style="text-align:left">F</td><td style="text-align:right"><strong>102</strong></td><td style="text-align:center">66</td><td style="text-align:left">f</td></tr><tr><td style="text-align:right"><strong>7</strong></td><td style="text-align:center">07</td><td style="text-align:left">BEL</td><td style="text-align:right"><strong>39</strong></td><td style="text-align:center">27</td><td style="text-align:left">’</td><td style="text-align:right"><strong>71</strong></td><td style="text-align:center">47</td><td style="text-align:left">G</td><td style="text-align:right"><strong>103</strong></td><td style="text-align:center">67</td><td style="text-align:left">g</td></tr><tr><td style="text-align:right"><strong>8</strong></td><td style="text-align:center">08</td><td style="text-align:left">BS</td><td style="text-align:right"><strong>40</strong></td><td style="text-align:center">28</td><td style="text-align:left">(</td><td style="text-align:right"><strong>72</strong></td><td style="text-align:center">48</td><td style="text-align:left">H</td><td style="text-align:right"><strong>104</strong></td><td style="text-align:center">68</td><td style="text-align:left">h</td></tr><tr><td style="text-align:right"><strong>9</strong></td><td style="text-align:center">09</td><td style="text-align:left">HT</td><td style="text-align:right"><strong>41</strong></td><td style="text-align:center">29</td><td style="text-align:left">)</td><td style="text-align:right"><strong>73</strong></td><td style="text-align:center">49</td><td style="text-align:left">I</td><td style="text-align:right"><strong>105</strong></td><td style="text-align:center">69</td><td style="text-align:left">i</td></tr><tr><td style="text-align:right"><strong>10</strong></td><td style="text-align:center">0A</td><td style="text-align:left">LF</td><td style="text-align:right"><strong>42</strong></td><td style="text-align:center">2A</td><td style="text-align:left">*</td><td style="text-align:right"><strong>74</strong></td><td style="text-align:center">4A</td><td style="text-align:left">J</td><td style="text-align:right"><strong>106</strong></td><td style="text-align:center">6A</td><td style="text-align:left">j</td></tr><tr><td style="text-align:right"><strong>11</strong></td><td style="text-align:center">0B</td><td style="text-align:left">VT</td><td style="text-align:right"><strong>43</strong></td><td style="text-align:center">2B</td><td style="text-align:left">+</td><td style="text-align:right"><strong>75</strong></td><td style="text-align:center">4B</td><td style="text-align:left">K</td><td style="text-align:right"><strong>107</strong></td><td style="text-align:center">6B</td><td style="text-align:left">k</td></tr><tr><td style="text-align:right"><strong>12</strong></td><td style="text-align:center">0C</td><td style="text-align:left">FF</td><td style="text-align:right"><strong>44</strong></td><td style="text-align:center">2C</td><td style="text-align:left">,</td><td style="text-align:right"><strong>76</strong></td><td style="text-align:center">4C</td><td style="text-align:left">L</td><td style="text-align:right"><strong>108</strong></td><td style="text-align:center">6C</td><td style="text-align:left">l</td></tr><tr><td style="text-align:right"><strong>13</strong></td><td style="text-align:center">0D</td><td style="text-align:left">CR</td><td style="text-align:right"><strong>45</strong></td><td style="text-align:center">2D</td><td style="text-align:left">-</td><td style="text-align:right"><strong>77</strong></td><td style="text-align:center">4D</td><td style="text-align:left">M</td><td style="text-align:right"><strong>109</strong></td><td style="text-align:center">6D</td><td style="text-align:left">m</td></tr><tr><td style="text-align:right"><strong>14</strong></td><td style="text-align:center">0E</td><td style="text-align:left">SO</td><td style="text-align:right"><strong>46</strong></td><td style="text-align:center">2E</td><td style="text-align:left">.</td><td style="text-align:right"><strong>78</strong></td><td style="text-align:center">4E</td><td style="text-align:left">N</td><td style="text-align:right"><strong>110</strong></td><td style="text-align:center">6E</td><td style="text-align:left">n</td></tr><tr><td style="text-align:right"><strong>15</strong></td><td style="text-align:center">0F</td><td style="text-align:left">SI</td><td style="text-align:right"><strong>47</strong></td><td style="text-align:center">2F</td><td style="text-align:left">/</td><td style="text-align:right"><strong>79</strong></td><td style="text-align:center">4F</td><td style="text-align:left">O</td><td style="text-align:right"><strong>111</strong></td><td style="text-align:center">6F</td><td style="text-align:left">o</td></tr><tr><td style="text-align:right"><strong>16</strong></td><td style="text-align:center">10</td><td style="text-align:left">DLE</td><td style="text-align:right"><font color=#FF0000><strong>48</strong></font></td><td style="text-align:center"><font color=#0000FF><strong>30</strong></font></td><td style="text-align:left"><font color=#FF0000><strong>0</strong></font></td><td style="text-align:right"><strong>80</strong></td><td style="text-align:center">50</td><td style="text-align:left">P</td><td style="text-align:right"><strong>112</strong></td><td style="text-align:center">70</td><td style="text-align:left">p</td></tr><tr><td style="text-align:right"><strong>17</strong></td><td style="text-align:center">11</td><td style="text-align:left">DC1</td><td style="text-align:right"><strong>49</strong></td><td style="text-align:center">31</td><td style="text-align:left">1</td><td style="text-align:right"><strong>81</strong></td><td style="text-align:center">51</td><td style="text-align:left">Q</td><td style="text-align:right"><strong>113</strong></td><td style="text-align:center">71</td><td style="text-align:left">q</td></tr><tr><td style="text-align:right"><strong>18</strong></td><td style="text-align:center">12</td><td style="text-align:left">DC2</td><td style="text-align:right"><strong>50</strong></td><td style="text-align:center">32</td><td style="text-align:left">2</td><td style="text-align:right"><strong>82</strong></td><td style="text-align:center">52</td><td style="text-align:left">R</td><td style="text-align:right"><strong>114</strong></td><td style="text-align:center">72</td><td style="text-align:left">r</td></tr><tr><td style="text-align:right"><strong>19</strong></td><td style="text-align:center">13</td><td style="text-align:left">DC3</td><td style="text-align:right"><strong>51</strong></td><td style="text-align:center">33</td><td style="text-align:left">3</td><td style="text-align:right"><strong>83</strong></td><td style="text-align:center">53</td><td style="text-align:left">S</td><td style="text-align:right"><strong>115</strong></td><td style="text-align:center">73</td><td style="text-align:left">s</td></tr><tr><td style="text-align:right"><strong>20</strong></td><td style="text-align:center">14</td><td style="text-align:left">DC4</td><td style="text-align:right"><strong>52</strong></td><td style="text-align:center">34</td><td style="text-align:left">4</td><td style="text-align:right"><strong>84</strong></td><td style="text-align:center">54</td><td style="text-align:left">T</td><td style="text-align:right"><strong>116</strong></td><td style="text-align:center">74</td><td style="text-align:left">t</td></tr><tr><td style="text-align:right"><strong>21</strong></td><td style="text-align:center">15</td><td style="text-align:left">NAK</td><td style="text-align:right"><strong>53</strong></td><td style="text-align:center">35</td><td style="text-align:left">5</td><td style="text-align:right"><strong>85</strong></td><td style="text-align:center">55</td><td style="text-align:left">U</td><td style="text-align:right"><strong>117</strong></td><td style="text-align:center">75</td><td style="text-align:left">u</td></tr><tr><td style="text-align:right"><strong>22</strong></td><td style="text-align:center">16</td><td style="text-align:left">SYN</td><td style="text-align:right"><strong>54</strong></td><td style="text-align:center">36</td><td style="text-align:left">6</td><td style="text-align:right"><strong>86</strong></td><td style="text-align:center">56</td><td style="text-align:left">V</td><td style="text-align:right"><strong>118</strong></td><td style="text-align:center">76</td><td style="text-align:left">v</td></tr><tr><td style="text-align:right"><strong>23</strong></td><td style="text-align:center">17</td><td style="text-align:left">ETB</td><td style="text-align:right"><strong>55</strong></td><td style="text-align:center">37</td><td style="text-align:left">7</td><td style="text-align:right"><strong>87</strong></td><td style="text-align:center">57</td><td style="text-align:left">W</td><td style="text-align:right"><strong>119</strong></td><td style="text-align:center">77</td><td style="text-align:left">w</td></tr><tr><td style="text-align:right"><strong>24</strong></td><td style="text-align:center">18</td><td style="text-align:left">CAN</td><td style="text-align:right"><strong>56</strong></td><td style="text-align:center">38</td><td style="text-align:left">8</td><td style="text-align:right"><strong>88</strong></td><td style="text-align:center">58</td><td style="text-align:left">X</td><td style="text-align:right"><strong>120</strong></td><td style="text-align:center">78</td><td style="text-align:left">x</td></tr><tr><td style="text-align:right"><strong>25</strong></td><td style="text-align:center">19</td><td style="text-align:left">EM</td><td style="text-align:right"><strong>57</strong></td><td style="text-align:center">39</td><td style="text-align:left">9</td><td style="text-align:right"><strong>89</strong></td><td style="text-align:center">59</td><td style="text-align:left">Y</td><td style="text-align:right"><strong>121</strong></td><td style="text-align:center">79</td><td style="text-align:left">y</td></tr><tr><td style="text-align:right"><strong>26</strong></td><td style="text-align:center">1A</td><td style="text-align:left">SUB</td><td style="text-align:right"><strong>58</strong></td><td style="text-align:center">3A</td><td style="text-align:left">:</td><td style="text-align:right"><strong>90</strong></td><td style="text-align:center">5A</td><td style="text-align:left">Z</td><td style="text-align:right"><strong>122</strong></td><td style="text-align:center">7A</td><td style="text-align:left">z</td></tr><tr><td style="text-align:right"><strong>27</strong></td><td style="text-align:center">1B</td><td style="text-align:left">ESC</td><td style="text-align:right"><strong>59</strong></td><td style="text-align:center">3B</td><td style="text-align:left">;</td><td style="text-align:right"><strong>91</strong></td><td style="text-align:center">5B</td><td style="text-align:left">[</td><td style="text-align:right"><strong>123</strong></td><td style="text-align:center">7B</td><td style="text-align:left">{</td></tr><tr><td style="text-align:right"><strong>28</strong></td><td style="text-align:center">1C</td><td style="text-align:left">FS</td><td style="text-align:right"><strong>60</strong></td><td style="text-align:center">3C</td><td style="text-align:left">&lt;</td><td style="text-align:right"><strong>92</strong></td><td style="text-align:center">5C</td><td style="text-align:left">\</td><td style="text-align:right"><strong>124</strong></td><td style="text-align:center">7C</td><td style="text-align:left">|</td></tr><tr><td style="text-align:right"><strong>29</strong></td><td style="text-align:center">1D</td><td style="text-align:left">GS</td><td style="text-align:right"><strong>61</strong></td><td style="text-align:center">3D</td><td style="text-align:left">=</td><td style="text-align:right"><strong>93</strong></td><td style="text-align:center">5D</td><td style="text-align:left">]</td><td style="text-align:right"><strong>125</strong></td><td style="text-align:center">7D</td><td style="text-align:left">}</td></tr><tr><td style="text-align:right"><strong>30</strong></td><td style="text-align:center">1E</td><td style="text-align:left">RS</td><td style="text-align:right"><strong>62</strong></td><td style="text-align:center">3E</td><td style="text-align:left">&gt;</td><td style="text-align:right"><strong>94</strong></td><td style="text-align:center">5E</td><td style="text-align:left">^</td><td style="text-align:right"><strong>126</strong></td><td style="text-align:center">7E</td><td style="text-align:left">~</td></tr><tr><td style="text-align:right"><strong>31</strong></td><td style="text-align:center">1F</td><td style="text-align:left">US</td><td style="text-align:right"><strong>63</strong></td><td style="text-align:center">3F</td><td style="text-align:left">?</td><td style="text-align:right"><strong>95</strong></td><td style="text-align:center">5F</td><td style="text-align:left">_</td><td style="text-align:right"><strong>127</strong></td><td style="text-align:center">7F</td><td style="text-align:left">DEL</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> UsefulTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UsefulTools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-488 Triangle Wave</title>
      <link href="/posts/UVa-488-Triangle-Wave.html"/>
      <url>/posts/UVa-488-Triangle-Wave.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/4/488.pdf">https://onlinejudge.org/external/4/488.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>根據題目所指定的<code>Amplitude(震幅)</code>以及<code>Frequency(頻率)</code>去生成正確的<code>三角波(triangular wave)</code></p></blockquote><ul><li>先輸入一個T，表示測資總數</li><li>每筆測資會需要輸入一對數字<code>Amplitude(震幅)</code>,<code>Frequency(頻率)</code></li><li>依照輸入的震幅與頻率去產生波(waves)</li><li>輸出的每筆測資間要空一行</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>利用<code>巢狀迴圈</code>及留意空白行以完成解題</li><li>首先根據給定的num和times參數來生成圖案。</li><li>在solve函數中，使用嵌套的迴圈來生成圖案。外層迴圈i從1遞增到times，表示要生成圖案的次數。<ul><li>內層迴圈1用於生成上半部分的圖案，它從j等於1遞增到num，然後再使用第三層迴圈k從1遞增到j，在每次迴圈中輸出j。</li><li>內層迴圈2用於生成下半部分的圖案，它從j等於num-1遞減到1，然後再使用第三層迴圈k從1遞增到j，在每次迴圈中輸出j。在每次迴圈後，如果i小於times，則輸出一個空行。</li></ul></li><li>在main函數中，首先讀取整數T，表示測試案例的數量。接著使用一個while迴圈處理每個測試案例。在每個測試案例中，讀取整數num和times，並呼叫solve函數來生成圖案。最後，如果還有更多測試案例，則輸出一個空行。</li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol004/00488.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol004/00488.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/488"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;num, <span class="type">const</span> <span class="type">int</span> &amp;times)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=times; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=num; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=j; k++) cout&lt;&lt;j;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=num<span class="number">-1</span>; j&gt;<span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=j; k++) cout&lt;&lt;j;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;times) cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> num,times;</span><br><span class="line">        cin&gt;&gt;num&gt;&gt;times;</span><br><span class="line">        <span class="built_in">solve</span>(num,times);</span><br><span class="line">        <span class="keyword">if</span>(T) cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown語法與外掛標籤語法彙整</title>
      <link href="/posts/8926179c.html"/>
      <url>/posts/8926179c.html</url>
      
        <content type="html"><![CDATA[<h1>Markdown常用語法</h1><h2 id="文字字體">文字字體</h2><table><thead><tr><th style="text-align:center">樣式</th><th style="text-align:center">語法 (注意標點符號的部分)</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">粗體</td><td style="text-align:center">**粗體範例**</td><td style="text-align:center"><strong>粗體範例</strong></td></tr><tr><td style="text-align:center">斜體</td><td style="text-align:center">*斜體範例*</td><td style="text-align:center"><em>斜體範例</em></td></tr><tr><td style="text-align:center">斜粗體</td><td style="text-align:center">***斜粗體範例***</td><td style="text-align:center"><em><strong>斜粗體範例</strong></em></td></tr><tr><td style="text-align:center">刪除線</td><td style="text-align:center">~~刪除線範例~~</td><td style="text-align:center"><s>刪除線範例</s></td></tr><tr><td style="text-align:center">底線</td><td style="text-align:center">&lt;u&gt;底線範例&lt;/u&gt;</td><td style="text-align:center"><u>底線範例</u></td></tr></tbody></table><h2 id="文字顏色">文字顏色</h2><ul><li><a href="https://www.w3schools.com/colors/colors_picker.asp">HTML Color Picker</a></li><li><a href="https://www.ifreesite.com/color/web-color-code.htm">常用顏色表</a></li></ul><table><thead><tr><th style="text-align:center">語法</th><th style="text-align:center">效果</th><th style="text-align:center">語法</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">&lt;font color=#800000&gt;酒紅色&lt;/font&gt;</td><td style="text-align:center"><font color=#800000>酒紅色</font></td><td style="text-align:center">&lt;font color=#FF6600&gt;橘色&lt;/font&gt;</td><td style="text-align:center"><font color=#FF6600>橘色</font></td></tr><tr><td style="text-align:center">&lt;font color=#FF0000&gt;紅色&lt;/font&gt;</td><td style="text-align:center"><font color=#FF0000>紅色</font></td><td style="text-align:center">&lt;font color=#FFFF00&gt;黃色&lt;/font&gt;</td><td style="text-align:center"><font color=#FFFF00>黃色</font></td></tr><tr><td style="text-align:center">&lt;font color=#FFD700&gt;金色&lt;/font&gt;</td><td style="text-align:center"><font color=#FFD700>金色</font></td><td style="text-align:center">&lt;font color=#00FF00&gt;綠色&lt;/font&gt;</td><td style="text-align:center"><font color=#00FF00>綠色</font></td></tr><tr><td style="text-align:center">&lt;font color=#008000&gt;墨綠色&lt;/font&gt;</td><td style="text-align:center"><font color=#008000>墨綠色</font></td><td style="text-align:center">&lt;font color=#00FFFF&gt;青色&lt;/font&gt;</td><td style="text-align:center"><font color=#00FFFF>青色</font></td></tr><tr><td style="text-align:center">&lt;font color=#0000FF&gt;深藍色&lt;/font&gt;</td><td style="text-align:center"><font color=#0000FF>深藍色</font></td><td style="text-align:center">&lt;font color=#FF00FF&gt;粉紅色&lt;/font&gt;</td><td style="text-align:center"><font color=#FF00FF>粉紅色</font></td></tr><tr><td style="text-align:center">&lt;font color=#800080&gt;紫色&lt;/font&gt;</td><td style="text-align:center"><font color=#800080>紫色</font></td><td style="text-align:center">&lt;font color=#808080&gt;灰色&lt;/font&gt;</td><td style="text-align:center"><font color=#808080>灰色</font></td></tr></tbody></table><h2 id="分隔線">分隔線</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---     //三個短橫槓</span><br><span class="line"><span class="strong">***     //三個星號</span></span><br><span class="line"><span class="strong">___     //三個下引線</span></span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><hr><h2 id="文字框">文字框</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`框住的文字`</span></span><br></pre></td></tr></table></figure><ul><li>效果：<br><code>框住的文字</code></li></ul><h2 id="項目符號與編號">項目符號與編號</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> one</span><br><span class="line"><span class="bullet">2.</span> two</span><br><span class="line"><span class="bullet">    1.</span> two-one</span><br><span class="line"><span class="bullet">    2.</span> two-two</span><br><span class="line"><span class="bullet">-</span> one</span><br><span class="line"><span class="bullet">-</span> two</span><br><span class="line"><span class="bullet">    -</span> two-one</span><br><span class="line"><span class="bullet">    -</span> two-two</span><br><span class="line"><span class="bullet">+</span> plus</span><br><span class="line"><span class="bullet">-</span> minus</span><br><span class="line"><span class="bullet">*</span> star</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><ol><li>one</li><li>two<ol><li>two-one</li><li>two-two</li></ol></li></ol><ul><li>one</li><li>two<ul><li>two-one</li><li>two-two</li></ul></li></ul><ul><li>plus</li></ul><ul><li>minus</li></ul><ul><li>star</li></ul><h2 id="待辦事項">待辦事項</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ] 待辦一</span><br><span class="line"><span class="bullet">-</span> [x] 待辦二</span><br><span class="line"><span class="bullet">    -</span> [X] 待辦三</span><br><span class="line"><span class="bullet">    -</span> [ ] 待辦四</span><br><span class="line"><span class="bullet">-</span> [X] 待辦五</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><ul><li>[ ] 待辦一</li><li>[x] 待辦二<ul><li>[X] 待辦三</li><li>[ ] 待辦四</li></ul></li><li>[X] 待辦五</li></ul><h2 id="引用區塊">引用區塊</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 輸入右箭頭及一格空白</span></span><br><span class="line"><span class="quote">&gt; 即可開始使用引用樣式</span></span><br><span class="line"><span class="quote">&gt; 就如同效果展現的一樣</span></span><br><span class="line">&gt;&gt; 引用也有階層模式</span><br><span class="line">&gt;&gt;&gt; 輸入多個右箭頭即可實現</span><br><span class="line">&gt;&gt;&gt; 就如同效果展現的一樣</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><blockquote><p>輸入右箭頭及一格空白<br>即可開始使用引用樣式<br>就如同效果展現的一樣</p><blockquote><p>引用也有階層模式</p><blockquote><p>輸入多個右箭頭即可實現<br>就如同效果展現的一樣</p></blockquote></blockquote></blockquote><h2 id="超連結">超連結</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">&lt;https://www.youtube.com/&gt;</span>                  //純網址超連結</span><br><span class="line">[<span class="string">Youtube首頁</span>](<span class="link">https://www.youtube.com/</span>)     //文字超連結</span><br></pre></td></tr></table></figure><ul><li>效果：<br><a href="https://www.youtube.com/">https://www.youtube.com/</a><br><a href="https://www.youtube.com/">Youtube首頁</a></li></ul><h2 id="表格">表格</h2><ul><li>可以利用冒號<code>:</code>來決定向哪一邊對齊</li><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|標題1|標題2|標題3|標題4|</span><br><span class="line">|---|:---|:---:|---:|</span><br><span class="line">|預設對齊|靠左對齊|置中對齊|靠右對齊|</span><br><span class="line">|預設對齊|靠左對齊|置中對齊|靠右對齊|</span><br><span class="line">|預設對齊|靠左對齊|置中對齊|靠右對齊|</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><table><thead><tr><th>標題1</th><th style="text-align:left">標題2</th><th style="text-align:center">標題3</th><th style="text-align:right">標題4</th></tr></thead><tbody><tr><td>預設對齊</td><td style="text-align:left">靠左對齊</td><td style="text-align:center">置中對齊</td><td style="text-align:right">靠右對齊</td></tr><tr><td>預設對齊</td><td style="text-align:left">靠左對齊</td><td style="text-align:center">置中對齊</td><td style="text-align:right">靠右對齊</td></tr><tr><td>預設對齊</td><td style="text-align:left">靠左對齊</td><td style="text-align:center">置中對齊</td><td style="text-align:right">靠右對齊</td></tr></tbody></table><h2 id="程式碼區塊與語法高亮">程式碼區塊與語法高亮</h2><ul><li>可以在<code>```</code>後標註程式語言名稱以啟動語法高亮</li><li>語法：</li></ul><blockquote><p>```c++<br>#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>int main() {<br>cout&lt;&lt;“Hello World!\n”;<br>return 0;<br>}<br>```</p></blockquote><ul><li>效果：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World!\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="圖片">圖片</h2><ul><li>與文字超連結的語法相似，只是在開頭多加上了一個<code>!</code></li><li>左邊為圖片名稱(可留白)，右邊為圖片連接</li><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Google首頁Logo</span>](<span class="link">https://www.google.com.tw/images/branding/googlelogo/2x/googlelogo_color_160x56dp.png</span>)</span><br></pre></td></tr></table></figure><ul><li>效果：<br><img src="https://www.google.com.tw/images/branding/googlelogo/2x/googlelogo_color_160x56dp.png" alt="Google首頁Logo"></li></ul><h2 id="標題">標題</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1        一級標題</span></span><br><span class="line"><span class="section">## H2       二級標題</span></span><br><span class="line"><span class="section">### H3      三級標題</span></span><br><span class="line"><span class="section">#### H4     四級標題</span></span><br><span class="line"><span class="section">##### H5    五級標題</span></span><br><span class="line"><span class="section">###### H6   六級標題</span></span><br></pre></td></tr></table></figure><ul><li>效果：<br><img src="https://upload.cc/i1/2022/11/29/e4zHCJ.png" alt="標題示範"></li></ul><h1>Hexo標籤外掛(Tag Plugins)</h1><div class="note warning flat"><p>標籤外掛是Hexo的特色功能，並不是標準的Markdown格式。<br>標籤外掛可大幅增添文章風采，以下寫法主要適用於Butterfly主題，使用於其他主題未必可兼容，使用前請留意。</p></div><h2 id="特殊標籤">特殊標籤</h2><ul><li>語法:</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><div class="note default flat"><p>default 提示</p></div><div class="note primary flat"><p>primary 提示</p></div><div class="note success flat"><p>success 提示</p></div><div class="note info flat"><p>info 提示</p></div><div class="note warning flat"><p>warning 提示</p></div><div class="note danger flat"><p>danger 提示</p></div><h2 id="Tabs-頁籤">Tabs 頁籤</h2><ul><li>語法：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs mytab,2 %&#125; 將 tab 取名為 mytab，預設會選取第二個頁籤，使用 -1 會不選取</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">因沒有特別命名，所以此頁籤會用 <span class="code">`mytab`</span> 加上流水號。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">預設進來會先看到此頁。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 這是頁籤三 --&gt;</span><br><span class="line">這裡有命名，會看到頁籤名不一樣。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">可以看到這裡的流水號是從 4 開始，因為頁籤會使用 Array Index 作為流水號。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 帶圖標的頁籤 @fas fa-address-card --&gt;</span><br><span class="line">這裡有加 icon，有什麼 icon 可以來[<span class="string">這裡</span>](<span class="link">https://fontawesome.com/icons</span>)找。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><ul><li>效果：</li></ul><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#mytab-1">mytab 1</button></li><li class="tab active"><button type="button" data-href="#mytab-2">mytab 2</button></li><li class="tab"><button type="button" data-href="#mytab-3">這是頁籤三</button></li><li class="tab"><button type="button" data-href="#mytab-4">mytab 4</button></li><li class="tab"><button type="button" data-href="#mytab-5"><i class="fas fa-address-card"></i>帶圖標的頁籤</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="mytab-1"><p>因沒有特別命名，所以此頁籤會用 <code>mytab</code> 加上流水號。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="mytab-2"><p>預設進來會先看到此頁。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-3"><p>這裡有命名，會看到頁籤名不一樣。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-4"><p>可以看到這裡的流水號是從 4 開始，因為頁籤會使用 Array Index 作為流水號。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-5"><p>這裡有加 icon，有什麼 icon 可以來<a href="https://fontawesome.com/icons">這裡</a>找。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> HexoTutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-387 First Unique Character in a String</title>
      <link href="/posts/e141da93.html"/>
      <url>/posts/e141da93.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/first-unique-character-in-a-string/">https://leetcode.com/problems/first-unique-character-in-a-string/</a></p></div><h2 id="題目概要">題目概要</h2><blockquote><p>給定一個字串<code>s</code>，返回該字串中<strong>第一個沒有重複的字元它的位置(index)</strong> ，若是沒有則返回<code>-1</code>。</p></blockquote><ul><li>舉例：<ul><li><code>&quot;leetcode&quot;</code> : 返回<code>0</code>，(<code>l</code>是第一個沒有重複的字元)</li><li><code>&quot;loveleetcode&quot;</code> : 返回<code>2</code>，(<code>o</code>是第一個沒有重複的字元)</li><li><code>&quot;aabb&quot;</code> : 返回<code>-1</code>，(沒有任何一個字元是沒有重複的)</li></ul></li></ul><h2 id="解題思路">解題思路</h2><ul><li>利用函數unordered_map建立一個無序容器</li><li>接著每個新被for迴圈跑到的字母，都會在容器中新增一個key並將其value加1</li><li>最後確認每個key的value，第一個出現value==1的key將會被回傳它的位置</li></ul><h2 id="參考程式碼">參考程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">firstUniqChar</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; table;</span><br><span class="line">        <span class="comment">// 把s的字母寫進table中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">length</span>();i++)</span><br><span class="line">            table[s[i]]++;</span><br><span class="line">        <span class="comment">// 確認每個table中的key的value，如果value==1，則回傳其位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">length</span>();j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(table[s[j]]==<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果都沒有出現value==1，則回傳-1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo指令常用彙整</title>
      <link href="/posts/9ed81c7a.html"/>
      <url>/posts/9ed81c7a.html</url>
      
        <content type="html"><![CDATA[<h1>基本指令</h1><h2 id="官方文檔鏈結"><strong><a href="https://hexo.io/zh-tw/docs/commands">官方文檔鏈結</a></strong></h2><h2 id="Hexo安裝與升級">Hexo安裝與升級</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g  #升级Hexo</span><br></pre></td></tr></table></figure><h2 id="網站起點-hexo-init">網站起點 hexo init</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]  #初始化本地文件夾為網站的根目錄</span><br></pre></td></tr></table></figure><ul><li><code>folder</code>為可選參數，用來指定初始化目錄的路徑，若無指定則默認為當前目錄</li><li>完成建立後會出現以下資料夾與檔案：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml <span class="comment"># 網站設定檔</span></span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds <span class="comment"># 鷹架資料夾</span></span><br><span class="line">├── scripts <span class="comment"># 腳本資料夾</span></span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts <span class="comment">#草稿資料夾 (在此的文章暫時不會被發布出去)</span></span><br><span class="line">|   └── _posts  <span class="comment">#可在_posts資料夾新建第一篇文章 (主要文章編寫處)</span></span><br><span class="line">└── themes <span class="comment"># 主題資料夾</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="新建文章或頁面-hexo-new">新建文章或頁面 hexo new</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 新建文章 #</span><br><span class="line">hexo new [layout] &lt;<span class="built_in">title</span>&gt;   #標準寫法</span><br><span class="line">hexo n [layout] &lt;<span class="built_in">title</span>&gt;     #簡寫寫法</span><br><span class="line"># 新建頁面 #</span><br><span class="line">hexo new page [layout] &lt;<span class="built_in">title</span>&gt; #標準寫法</span><br><span class="line">hexo n page [layout] &lt;<span class="built_in">title</span>&gt;   #簡寫寫法</span><br></pre></td></tr></table></figure><ul><li><code>layout</code>為可選參數，用來指定文章類型，若無指定則默認由配置文件中的default_layout選項決定</li><li><code>title</code>為必要參數，用以指定文章標題，若有包含空格，則需使用雙引號<code>&quot; &quot;</code>包圍</li><li>範例：<code>hexo new &quot;postName&quot;</code> <code>hexo new page &quot;pageName&quot;</code></li></ul><h2 id="啟動本地伺服器-hexo-server">啟動本地伺服器 hexo server</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server  #標準寫法</span><br><span class="line">hexo s       #簡寫寫法</span><br></pre></td></tr></table></figure><ul><li>在本地端啟動 Hexo 伺服器，預設路徑為：<a href="http://localhost:4000/">http://localhost:4000/</a></li></ul><blockquote><p>localhost：代表只能從本地瀏覽此網站，無法從外部瀏覽</p></blockquote><ul><li>可在自己電腦上預覽設定結果，按 Ctrl + C 即可關閉</li><li>運行服務器前需先安裝 hexo-server 插件<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="生成靜態文件-hexo-generate">生成靜態文件 hexo generate</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate   #標準寫法</span><br><span class="line">hexo g          #簡寫寫法</span><br></pre></td></tr></table></figure><ul><li>生成網站靜態文件到<code>public</code>資料夾內</li></ul><h2 id="部屬網站-hexo-deploy">部屬網站 hexo deploy</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy     #標準寫法</span><br><span class="line">hexo d          #簡寫寫法</span><br></pre></td></tr></table></figure><ul><li>自動生成網站靜態文件，並部署到設定的倉庫</li></ul><h2 id="清理緩存-hexo-clean">清理緩存 hexo clean</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #標準寫法</span><br><span class="line">hexo cl     #簡寫寫法</span><br></pre></td></tr></table></figure><ul><li>用於清理緩存文件，是非常常用的指令</li><li>在每次儲存修正後的檔案之前，會建議先輸入此指令，清除快取檔案（db.json）和已產生的靜態檔案（public）。</li><li>當網站發生異常時，可嘗試此操作</li></ul><h2 id="查看幫助-hexo-help">查看幫助 hexo help</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="built_in">help</span> #查看幫助</span><br></pre></td></tr></table></figure><h2 id="顯示Hexo版本資訊">顯示Hexo版本資訊</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version  #顯示Hexo版本資訊</span><br></pre></td></tr></table></figure><h1>預覽與部屬網站流程</h1><h2 id="預覽網站">預覽網站</h2><ul><li><strong>當每次完成更新後，可先啟動本地伺服器來預覽更新的網站是否符合期待。</strong></li><li><strong>可利用以下指令來重建頁面並啟動本地伺服器：</strong></li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h2 id="部屬網站">部屬網站</h2><ul><li><strong>在確認網站內容正確後，通常會依序輸入 <code>clean</code> -&gt; <code>generate</code> -&gt; <code>deploy</code> 三個指令，確保網站完整更新。</strong><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl     #清除緩存</span><br><span class="line">hexo g      #生成靜態頁面</span><br><span class="line">hexo d      #部署網站</span><br></pre></td></tr></table></figure></li><li><strong>可直接使用以下一行指令一鍵完成更新：</strong><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> HexoTutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-344 Reverse String</title>
      <link href="/posts/8a97bb1c.html"/>
      <url>/posts/8a97bb1c.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/reverse-string/">https://leetcode.com/problems/reverse-string/</a></p></div><h2 id="題目概要">題目概要</h2><blockquote><p>使用<code>原地演算法(in-place algorithm)</code>將題目給定的字串<code>s</code>進行<strong>倒轉(reverse)</strong> 。</p></blockquote><ul><li><code>原地演算法(in-place algorithm)</code>：不藉助額外的資料結構就能對輸入的資料進行變換的演算法。（分配少量空間給部分輔助變數是允許的。）</li><li>舉例：s = [“H”,“a”,“n”,“n”,“a”,“h”]；倒轉後即 [“h”,“a”,“n”,“n”,“a”,“H”]。</li></ul><h2 id="解題思路">解題思路</h2><ul><li>利用<strong>兩個指標</strong>(左右指標i,j)逐漸<strong>由左右兩側</strong>往中間接近，每次移動一個單位，移動前置換彼此。</li><li>當兩指標在<strong>中央</strong>相會時即完成所有置換的動作。</li></ul><h2 id="參考程式碼">參考程式碼</h2><div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mytab-1">C++</button></li><li class="tab"><button type="button" data-href="#mytab-2">Python3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mytab-1"><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">reverseString</span><span class="params">(vector&lt;<span class="type">char</span>&gt;&amp; s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=s.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j) &#123;</span><br><span class="line">            <span class="type">char</span> temp=s[i];</span><br><span class="line">            s[i]=s[j];</span><br><span class="line">            s[j]=temp;</span><br><span class="line">            i++; j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="mytab-2"><ul><li><strong>Using Two Pointers</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reverseString</span>(<span class="params">self, s: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        l,r=<span class="number">0</span>,<span class="built_in">len</span>(s)-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l&lt;r:</span><br><span class="line">            s[l],s[r]=s[r],s[l]</span><br><span class="line">            l+=<span class="number">1</span></span><br><span class="line">            r-=<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li><strong>Using Function</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reverseString</span>(<span class="params">self, s: <span class="type">List</span>[<span class="built_in">str</span>]</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        s.reverse()</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-10107 What is the Median?</title>
      <link href="/posts/UVa10107-What-is-the-Median.html"/>
      <url>/posts/UVa10107-What-is-the-Median.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/101/10107.pdf">https://onlinejudge.org/external/101/10107.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>題目會一個一個地持續輸入新的數字，而我們需要輸出 <strong>到目前為止已輸入的數的中位數</strong></p></blockquote><ul><li><strong>中位數</strong>即在一連串已由小到大排序的數字中，排在中間的那一個數。例如：<br>8、9、10、11、12 的中位數為 10<br>2、3、3、5、7、10 的中位數為 4</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>每次在輸入後便對數列進行排序</li><li>若當前數字數量為奇數，則輸出位於正中間的數</li><li>若當前數字數量為偶數，則輸出由正中間兩數除以2後的數字</li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol101/10107.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol101/10107.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/10107"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> x[<span class="number">10001</span>],num=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;x[num]) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(x,x+num+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>) cout&lt;&lt;x[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(num%<span class="number">2</span>!=<span class="number">0</span>) cout&lt;&lt;x[(num/<span class="number">2</span>)+<span class="number">1</span>];   <span class="comment">//num is odd</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">0</span>) cout&lt;&lt;(x[num/<span class="number">2</span>]+x[(num/<span class="number">2</span>)+<span class="number">1</span>])/<span class="number">2</span>;  <span class="comment">//num is even</span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-13 Roman to Integer</title>
      <link href="/posts/a423dd39.html"/>
      <url>/posts/a423dd39.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/roman-to-integer/">https://leetcode.com/problems/roman-to-integer/</a></p></div><h2 id="題目概要">題目概要</h2><blockquote><p>羅馬數字由7個不同的符號組成(如下表所示)，題目會給定一串羅馬符號，要求算出該數串的數值。</p></blockquote><table><thead><tr><th style="text-align:center">Symbol</th><th style="text-align:center">Value</th><th style="text-align:center">Symbol</th><th style="text-align:center">Value</th></tr></thead><tbody><tr><td style="text-align:center"><code>I</code></td><td style="text-align:center">1</td><td style="text-align:center"><code>V</code></td><td style="text-align:center">5</td></tr><tr><td style="text-align:center"><code>X</code></td><td style="text-align:center">10</td><td style="text-align:center"><code>L</code></td><td style="text-align:center">50</td></tr><tr><td style="text-align:center"><code>C</code></td><td style="text-align:center">100</td><td style="text-align:center"><code>D</code></td><td style="text-align:center">500</td></tr><tr><td style="text-align:center"><code>M</code></td><td style="text-align:center">1000</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="解題思路">解題思路</h2><ul><li>先建一個map容器，記錄下每個羅馬數字對應的數值大小</li><li>羅馬數字組成有個特別的規則是：<em>如果左邊的值比右邊的小，那麼就要用大減小的方式算出那兩個串數的值；除此之外都是直接相加。</em></li><li>因此利用這個規則可以推導出如果<code>左數大於等於右數那麼就把sum加上左數</code>，如果<code>左數小於右數那麼就把sum減掉左數</code></li></ul><h2 id="參考程式碼">參考程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">romanToInt</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; mp &#123;</span><br><span class="line">            &#123;<span class="string">&#x27;I&#x27;</span>,<span class="number">1</span>&#125;,&#123;<span class="string">&#x27;V&#x27;</span>,<span class="number">5</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;X&#x27;</span>,<span class="number">10</span>&#125;,&#123;<span class="string">&#x27;L&#x27;</span>,<span class="number">50</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;C&#x27;</span>,<span class="number">100</span>&#125;,&#123;<span class="string">&#x27;D&#x27;</span>,<span class="number">500</span>&#125;,</span><br><span class="line">            &#123;<span class="string">&#x27;M&#x27;</span>,<span class="number">1000</span>&#125;,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(mp[s[i]]&gt;=mp[s[i+<span class="number">1</span>]]) sum+=mp[s[i]];</span><br><span class="line">            <span class="keyword">else</span> sum-=mp[s[i]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-11369 Shopaholic</title>
      <link href="/posts/UVa-11369-Shopaholic.html"/>
      <url>/posts/UVa-11369-Shopaholic.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/113/11369.pdf">https://onlinejudge.org/external/113/11369.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>有間商店舉辦優惠活動，活動的方法是<strong>買三件物品而其中最便宜的一件不用錢</strong>，問最多可以省多少錢。</p><blockquote><p>原文舉例：你的朋友拿了價值為400, 350, 300, 250, 200, 150, 及 100 的七樣商品到櫃枱去結帳，她就得付 1500 元。她省下了最便宜的兩樣商品的價錢，也就是 250 元。如果她分三次去結帳，她可以省下更多的錢。比如說，她先拿400, 300 和 250 的去結，第一次就可以省下 250 元。第二次她只拿 150 元的去結，沒有折扣。但是第三次她拿350, 200, 和 100 的去結，又省了 100 元，總共省下了 350 元。</p></blockquote></blockquote><ul><li>第一行是測試筆數T(1 ≤ T ≤ 20)。每筆測試有兩行輸入。第一行是林希買的商品數n(1 ≤ n ≤ 20000)。下一行則是這些商品的價格pi(1 ≤ pi ≤ 20000)。</li><li>每個測試，輸出一行，印出如果林希適當地分次結帳時所能省下的最大金額。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>貪婪演算法(Greedy)</li><li>將數據從大到小排序，每次取前三個物品，可以省下其中最便宜的，此方法即為最省錢的方法</li><li>先利用sort函數，將價格由大到小進行降序排列</li><li>接著把所有價格看成三個三個一組，其中每組的第三筆價格就是可以被省下的金額</li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11369.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11369.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/11369"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> pi[n];</span><br><span class="line">        <span class="comment">//inpiut</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            cin&gt;&gt;pi[i];</span><br><span class="line">        <span class="comment">//calculate</span></span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">sort</span>(pi,pi+n,<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());  <span class="comment">//降序排列</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;n;i+=<span class="number">3</span>)</span><br><span class="line">            sum+=pi[i];</span><br><span class="line">        <span class="comment">//output</span></span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> Greedy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-392 Is Subsequence</title>
      <link href="/posts/f4ecb5a9.html"/>
      <url>/posts/f4ecb5a9.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://leetcode.com/problems/is-subsequence/">https://leetcode.com/problems/is-subsequence/</a></p></div><h2 id="題目概要">題目概要</h2><blockquote><p>給定兩個字串<code>s</code>與<code>t</code>，如果<code>s</code>是<code>t</code>的 <strong>子序列(subsequence)</strong> 則返回<code>true</code>，否則返回<code>false</code>。</p></blockquote><ul><li><strong>子序列(subsequence)</strong> 定義：字串的子序列即藉由刪除一些（或不刪除）連續字元且不打亂其餘字元的相對位置，讓原始字串(<code>t</code>)形成新的字串(<code>s</code>)。</li><li><strong>子序列(subsequence)</strong> 舉例：“ace&quot;是”<u>a</u>b<u>c</u>d<u>e</u>&quot;的子序列；&quot;aec&quot;不是&quot;abcde&quot;的子序列。</li></ul><h2 id="解題思路">解題思路</h2><ul><li>利用for迴圈逐一拿字串s的每個字元去跑字串t，最後確認有找到的數量是否跟字串s的字元數是否一樣，若一樣則返回true，不一樣則返回false。</li><li>若是字串s的字元在字串t中都找不到，變數j便會到達字串t的最後一個編號，因此for迴圈便可停止執行，直接執行最後的判斷語句。</li></ul><h2 id="參考程式碼">參考程式碼</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isSubsequence</span><span class="params">(string s, string t)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> j=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;s.<span class="built_in">length</span>()&amp;&amp;j&lt;t.<span class="built_in">length</span>(); i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(; j&lt;t.<span class="built_in">length</span>(); j++) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(s[i]==t[j]) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    j++;</span><br><span class="line">                    <span class="keyword">break</span>;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count==s.<span class="built_in">length</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="提交成果">提交成果</h2><div class="note warning flat"><p><strong>提交成果僅供參考，實際數值常會因伺服器實時運行、資源分配以及當下的隱藏測資而有所不同。</strong></p></div><p><img src="https://i.imgur.com/OAhk3M6.png" alt="Imgur"></p>]]></content>
      
      
      <categories>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-10198 Counting</title>
      <link href="/posts/UVa-10198-Counting.html"/>
      <url>/posts/UVa-10198-Counting.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/101/10198.pdf">https://onlinejudge.org/external/101/10198.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>給定一個數字<code>n</code>，求有多少種由<code>1,2,3,4</code>所構成的<strong>串位數之和為n</strong>。<strong>數字4要視為1</strong>。</p></blockquote><ul><li>例如：<code>n</code>=3，則符合規則的共會有13種：<ol><li>111 = 1+1+1</li><li>114 = 1+1+1</li><li>141 = 1+1+1</li><li>144 = 1+1+1</li><li>411 = 1+1+1</li><li>414 = 1+1+1</li><li>441 = 1+1+1</li><li>444 = 1+1+1</li><li>12 = 1+2</li><li>42 = 1+2</li><li>21 = 2+1</li><li>24 = 2+1</li><li>3 = 3</li></ol></li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>本題有兩個要點：一是<strong>動態規劃</strong>，二是<strong>大數運算</strong>。<ol><li>首先先做dp遞迴建表：<ul><li>dp[n]=k 表示寫出數字n的方式有k種</li><li>在這些序列中，以1開頭的序列總數為dp[n-1]，以2開頭的序列總數為dp[n-2]，以3開頭的序列總數為dp[n-3]，以4開頭的序列總數為dp[n-4]，而由於4的值必須視為1，故dp[n-4]=dp[n-1]</li><li>因此推廣公式後得到：dp[n]=dp[n-1]+dp[n-2]+dp[n-3]+dp[n-1] 開始遞迴</li><li>邊界條件：dp[1]=2; dp[2]=5; dp[3]=13</li></ul></li><li>接下來將處理大數運算：<ul><li>當數值超過10000時便進行壓縮一次，重複處理直到計算完畢</li></ul></li></ol></li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol101/10198.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol101/10198.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/10198"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//dp遞迴建表</span></span><br><span class="line">    <span class="type">int</span> dp[<span class="number">1005</span>][<span class="number">106</span>]; <span class="comment">//dp[n][大數運算用]=k 表示寫出數字n的方式有k種</span></span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp)); <span class="comment">//初始化為全0</span></span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>]=<span class="number">2</span>; dp[<span class="number">2</span>][<span class="number">0</span>]=<span class="number">5</span>; dp[<span class="number">3</span>][<span class="number">0</span>]=<span class="number">13</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">4</span>;i&lt;=<span class="number">1000</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">105</span>;j++) &#123;</span><br><span class="line">            dp[i][j]=dp[i<span class="number">-1</span>][j]+dp[i<span class="number">-2</span>][j]+dp[i<span class="number">-3</span>][j]+dp[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//大數運算</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">105</span>;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i][j]&gt;<span class="number">9999</span>) &#123;</span><br><span class="line">                dp[i][j+<span class="number">1</span>]+=dp[i][j]/<span class="number">10000</span>;</span><br><span class="line">                dp[i][j]%=<span class="number">10000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//input</span></span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n) &#123;</span><br><span class="line">        k = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">while</span> (!dp[n][k] &amp;&amp; k) &#123;</span><br><span class="line">            k--;</span><br><span class="line">        &#125;</span><br><span class="line">cout&lt;&lt;dp[n][k--];</span><br><span class="line"><span class="keyword">while</span> (k &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%04d&quot;</span>,dp[n][k --]); <span class="comment">//靠左對齊，寬度為4，缺空處補0</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> Dynamic Programming </tag>
            
            <tag> Big Number </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-369 Combinations</title>
      <link href="/posts/UVa-369-Combinations.html"/>
      <url>/posts/UVa-369-Combinations.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/3/369.pdf">https://onlinejudge.org/external/3/369.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><ul><li>輸入兩個整數 n,m</li><li>輸出 排列組合中的 Cn取m</li><li>當輸入為 0 0 時，程式終止</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>利用動態規劃(Dynamic Programming)的概念，從尾巴的部分開始去切。尾巴就是第n個，這個東西必定要決定取或不取，將第n物拿開，剩下的n-1個東西就會變成同性質的子問題<ul><li>dp[n][m]=k (在n個物品中取出m個的方法有k種)</li><li>若第n物選擇取，則剩餘的n-1物中，要剛好取m-1個</li><li>若第n物選不取，則剩餘的n-1物中，要剛好取m個</li><li>dp[n][m] = dp[n-1][m-1] + dp[n-1][m]</li></ul></li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol003/00369.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol003/00369.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/369"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//dp遞迴建表</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> <span class="type">int</span> c[<span class="number">105</span>][<span class="number">105</span>]; <span class="comment">//c[n][m]=k (在n個物品中取出m個的方法有k種)</span></span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="built_in">sizeof</span>(c)); <span class="comment">//初始化為全0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++) &#123;</span><br><span class="line">        c[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==j) c[i][j]=<span class="number">1</span>;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            若取第 n 物，則餘下 n-1 個中，要剛好取 m-1 個，加上第 n 個剛好；</span></span><br><span class="line"><span class="comment">            若不取第 n 物，則餘下 n-1 個中，要剛好取 m 個才會剛好。</span></span><br><span class="line"><span class="comment">                        取第 n 個     不取第 n 個</span></span><br><span class="line"><span class="comment">            dp[n][m] = dp[n-1][m-1] + dp[n-1][m]</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">else</span> c[i][j]=c[i<span class="number">-1</span>][j<span class="number">-1</span>]+c[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//input</span></span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    <span class="keyword">while</span>((cin&gt;&gt;n&gt;&gt;m)&amp;&amp;!(n==<span class="number">0</span>&amp;m==<span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="comment">//output (讀入n,m，查表輸出)</span></span><br><span class="line">        cout&lt;&lt;n&lt;&lt;<span class="string">&quot; things taken &quot;</span>&lt;&lt;m&lt;&lt;<span class="string">&quot; at a time is &quot;</span>&lt;&lt;c[n][m]&lt;&lt;<span class="string">&quot; exactly.\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> Dynamic Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-10041 Vito&#39;s Family</title>
      <link href="/posts/UVa-10041-Vitos-Family.html"/>
      <url>/posts/UVa-10041-Vitos-Family.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/100/10041.pdf">https://onlinejudge.org/external/100/10041.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><blockquote><p>主角在紐約有一個大家族，家族都住在同一條街上，主角想要搬到那條街與他們住在附近。請你找出最適合的地址，讓主角到各個親戚家的距離和可以最小。</p></blockquote><ul><li>第一列有一個整數，代表接下來有幾筆測資。</li><li>每組測資的第一個整數r代表親戚的數目。 (0 &lt; r &lt; 500)</li><li>接下來的r個整數(s1,s2,…,sr)代表各個親戚的門牌號碼。(0 &lt; s &lt; 30000)。</li><li>注意，親戚的門牌號碼可能會相同。</li><li>最後輸出從他的新家 到所有親戚家的最小距離和為多少。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>本題的核心觀念為找出 <strong>「中位數」</strong> ，因為中位數到其他各點的距離和為最小。</li></ul><div class="note info flat"><p><strong>中位數(Median)</strong> ：是指一組數字的中間數字；即是有一半數字的值大於中位數，而另一半數字的值小於中位數。例如：<br>8、9、10、11、12 的中位數為 10<br>2、3、3、5、21、36 的中位數為 4<br>2、3、4、5、21、36 的中位數為 4.5<br>94、95、99、99、100、101 的中位數為 99</p></div><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10041.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol100/10041.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="線上快速比對程式"><i class="far fa-hand-point-right"></i><span>線上快速比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/10041"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> T;  <span class="comment">//Testcases</span></span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        <span class="type">int</span> r; <span class="comment">//relatives</span></span><br><span class="line">        cin&gt;&gt;r;</span><br><span class="line">        <span class="type">int</span> v[<span class="number">501</span>]=&#123;&#125;; <span class="comment">//用來裝親戚住的街址</span></span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>; <span class="comment">//results</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++) &#123;</span><br><span class="line">            cin&gt;&gt;v[i]; &#125;</span><br><span class="line">        <span class="built_in">sort</span>(v,v+r); <span class="comment">//升序排列</span></span><br><span class="line">        <span class="type">int</span> mid=v[r/<span class="number">2</span>]; <span class="comment">//主角要住在中位數的地方</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;r;i++) &#123;</span><br><span class="line">            res+=<span class="built_in">abs</span>(mid-v[i]); &#125;</span><br><span class="line">        cout&lt;&lt;res&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> CPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CPE必考一顆星選集49題全詳解</title>
      <link href="/posts/CPEsolutions.html"/>
      <url>/posts/CPEsolutions.html</url>
      
        <content type="html"><![CDATA[<h1>CPE必考49題與各題詳解</h1><div class="note info flat"><p>CPE報名網址：<a href="https://cpe.cse.nsysu.edu.tw/cpe/">https://cpe.cse.nsysu.edu.tw/cpe/</a></p></div><table><thead><tr><th style="text-align:center">編號</th><th style="text-align:center">題目與原文鏈結</th><th style="text-align:center">CPE/UVa題號與解題鏈結</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10041.pdf">Vito’s family</a></td><td style="text-align:center"><a href="https://weilin1205.github.io/posts/UVa-10041-Vitos-Family.html">(CPE10406, UVA10041)</a></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10055.pdf">Hashmat the brave warrior</a></td><td style="text-align:center"><a href="https://weilin1205.github.io/posts/UVa-10055-Hashmat-the-brave-warrior.html">(CPE10407, UVA10055)</a></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10035.pdf">Primary Arithmetic</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10035_Primary_Arithmetic.cpp">(CPE10404, UVA10035)</a></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><a href="https://onlinejudge.org/external/1/100.pdf">The 3n + 1 problem</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume001/uva00100_The_3n%2B1_problem.cpp">(CPE10400, UVA100)</a></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><a href="https://onlinejudge.org/external/109/10929.pdf">You can say 11</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume109/uva10929_You_can_say_11.cpp">(CPE10460, UVA10929)</a></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><a href="https://onlinejudge.org/external/101/10101.pdf">Bangla Numbers</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume101/uva10101_Bangla_Numbers.cpp">(CPE10414, UVA10101)</a></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><a href="https://onlinejudge.org/external/104/10420.pdf">List of Conquests</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume104/uva10420_List_of_Conquests.cpp">(CPE21924, UVA10420)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>字元與字串</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10008.pdf">What’s Cryptanalysis?</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10008_Whats_Cryptanalysis.cpp">(CPE10402, UVA10008)</a></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10222.pdf">Decode the Mad man</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10222_Decode_the_Mad_man.cpp">(CPE10425, UVA10222)</a></td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><a href="https://onlinejudge.org/external/113/11332.pdf">Problem J: Summing Digits</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume113/uva11332_Summing_Digits.cpp">(CPE10473, UVA11332)</a></td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10252.pdf">Common Permutation</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10252_Common_Permutation.cpp">(CPE10567, UVA10252)</a></td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><a href="https://onlinejudge.org/external/4/490.pdf">Rotating Sentences</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume004/uva00490_Rotating_Sentences.cpp">(CPE21914, UVA490)</a></td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><a href="https://onlinejudge.org/external/2/272.pdf">TeX Quotes</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume002/uva00272_Rotating_Sentences.cpp">(CPE22131, UVA272)</a></td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><a href="https://onlinejudge.org/external/120/12019.pdf">A - Doom’s Day Algorithm</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume120/uva12019_Dooms_Day_Algorithm.cpp">(CPE22801, UVA12019)</a></td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10038.pdf">Jolly Jumpers</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10038_Jolly_Jumpers.cpp">(CPE10405, UVA10038)</a></td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10056.pdf">What is the Probability!!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10056_Rotating_Sentences.cpp">(CPE10408, UVA10056)</a></td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><a href="https://onlinejudge.org/external/101/10170.pdf">The Hotel with Infinite Rooms</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume101/uva10170_The_Hotel_with_Infinite_Rooms.cpp">(CPE10417, UVA10170)</a></td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10268.pdf">498’</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10268_498-bis.cpp">(CPE10431, UVA10268)</a></td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><a href="https://onlinejudge.org/external/107/10783.pdf">Odd Sum</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume107/uva10783_Odd_Sum.cpp">(CPE10453, UVA10783)</a></td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><a href="https://onlinejudge.org/external/108/10812.pdf">Beat the Spread!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume108/uva10812_Beat_the_Spread!.cpp">(CPE10454, UVA10812)</a></td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><a href="https://onlinejudge.org/external/113/11349.pdf">Symmetric Matrix</a></td><td style="text-align:center"><a href="https://weilin1205.github.io/posts/UVa-11349-Symmetric-Matrix.html">(CPE10478, UVA11349)</a></td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><a href="https://onlinejudge.org/external/114/11461.pdf">Square Numbers</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume114/uva11461_Square_Numbers.cpp">(CPE10480, UVA11461)</a></td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><a href="https://onlinejudge.org/external/110/11063.pdf">B2-Sequence</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume110/uva11063_B2-Sequence.cpp">(CPE23621, UVA11063)</a></td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10071.pdf">Back to High School Physics</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10071_Back_to_High_School_Physics.cpp">(CPE10411, UVA10071)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>進位制轉換</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10093.pdf">An Easy Problem!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10093_An_Easy_Problem!.cpp">(CPE10413, UVA10093)</a></td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><a href="https://onlinejudge.org/external/9/948.pdf">Fibonaccimal Base</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume009/uva00948_Fibonaccimal_Base.cpp">(CPE10401, UVA948)</a></td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10019.pdf">Funny Encryption Method</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10019_Funny_Encryption_Method.cpp">(CPE10403, UVA10019)</a></td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><a href="https://onlinejudge.org/external/109/10931.pdf">Parity</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume109/uva10931_Parity.cpp">(CPE10461, UVA10931)</a></td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><a href="https://onlinejudge.org/external/110/11005.pdf">Cheapest Base</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume110/uva11005_Cheapest%20Base.cpp">(CPE10466, UVA11005)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>質數、因數與倍數</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10050.pdf">Hartals</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10050_Hartals.cpp">(CPE10517, UVA10050)</a></td></tr><tr><td style="text-align:center">31</td><td style="text-align:center"><a href="https://onlinejudge.org/external/101/10193.pdf">All You Need Is Love!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume101/uva10193_All_You_Need_Is_Love.cpp">(CPE10421, UVA10193)</a></td></tr><tr><td style="text-align:center">32</td><td style="text-align:center"><a href="https://onlinejudge.org/external/101/10190.pdf">Divide, But Not Quite Conquer!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume101/uva10190_Divide_But_Not_Quite_Conquer!.cpp">(CPE10419, UVA10190)</a></td></tr><tr><td style="text-align:center">33</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10235.pdf">Simply Emirp</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10235_Simply_Emirp.cpp">(CPE10428, UVA10235)</a></td></tr><tr><td style="text-align:center">34</td><td style="text-align:center"><a href="https://onlinejudge.org/external/109/10922.pdf">2 the 9s</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume109/uva10922_2_the_9s.cpp">(CPE10458, UVA10922)</a></td></tr><tr><td style="text-align:center">35</td><td style="text-align:center"><a href="https://onlinejudge.org/external/114/11417.pdf">GCD</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume114/uva11417_GCD.cpp">(CPE11076, UVA11417)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>幾何與座標</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">36</td><td style="text-align:center"><a href="https://onlinejudge.org/external/109/10908.pdf">Largest Square</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume109/uva10908_Largest_Square.cpp">(CPE10456, UVA10908)</a></td></tr><tr><td style="text-align:center">37</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10221.pdf">Satellites</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10221_Satellites.cpp">(CPE10424, UVA10221)</a></td></tr><tr><td style="text-align:center">38</td><td style="text-align:center"><a href="https://onlinejudge.org/external/106/10642.pdf">Can You Solve It?</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume106/uva10642_Can_You_Solve_It.cpp">(CPE10447, UVA10642)</a></td></tr><tr><td style="text-align:center">39</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10242.pdf">Fourth Point!!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10242_Fourth_Point%20!!.cpp">(CPE10566, UVA10242)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>排序與中位數</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">40</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10057.pdf">A mid-summer night’s dream</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10057_A_mid-summer_nights_dream.cpp">(CPE10409, UVA10057)</a></td></tr><tr><td style="text-align:center">41</td><td style="text-align:center"><a href="https://onlinejudge.org/external/100/10062.pdf">Tell me the frequencies!</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume100/uva10062_Tell_me_the_frequencies!.cpp">(CPE10410, UVA10062)</a></td></tr><tr><td style="text-align:center">42</td><td style="text-align:center"><a href="https://onlinejudge.org/external/2/299.pdf">Train Swapping</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume002/uva00299_Train_Swapping.cpp">(CPE22811, UVA299)</a></td></tr><tr><td style="text-align:center">43</td><td style="text-align:center"><a href="https://onlinejudge.org/external/102/10226.pdf">Hardwood Species</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume102/uva10226_Hardwood_Species.cpp">(CPE10426, UVA10226)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>模擬</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">44</td><td style="text-align:center"><a href="https://onlinejudge.org/external/101/10189.pdf">Minesweeper</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume101/uva10189_Minesweeper.cpp">(CPE10418, UVA10189)</a></td></tr><tr><td style="text-align:center">45</td><td style="text-align:center"><a href="https://onlinejudge.org/external/104/10409.pdf">Die Game</a></td><td style="text-align:center"><a href="https://weilin1205.github.io/posts/UVa-10409-Die-Game.html">(CPE11019, UVA10409)</a></td></tr><tr><td style="text-align:center">46</td><td style="text-align:center"><a href="https://onlinejudge.org/external/104/10415.pdf">Eb Alto Saxophone Player</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume104/uva10415_Eb_Alto_Saxophone_Player.cpp">(CPE11020, UVA10415)</a></td></tr><tr><td style="text-align:center">47</td><td style="text-align:center"><a href="https://onlinejudge.org/external/1/118.pdf">Mutant Flatworld Explorers</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume001/uva00118_Mutant_Flatworld_Explorers_v2.cpp">(CPE23641, UVA118)</a></td></tr><tr><td style="text-align:center">48</td><td style="text-align:center"><a href="https://onlinejudge.org/external/111/11150.pdf">Cola</a></td><td style="text-align:center"><a href="https://github.com/weilin1205/UVaSolutions/blob/main/volume111/uva11150_Cola.cpp">(CPE11067, UVA11150)</a></td></tr><tr><td style="text-align:center"><strong>概念：</strong></td><td style="text-align:center"><strong>其他</strong></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">49</td><td style="text-align:center"><a href="https://onlinejudge.org/external/113/11321.pdf">Sort! Sort!! and Sort!!!</a></td><td style="text-align:center"><a href="https://weilin1205.github.io/posts/UVa-11321-Sort!-Sort!!-And-Sort!!!.html">(CPE11069, UVA11321)</a></td></tr></tbody></table><!-- # C++先備知識連結<a class="btn-beautify orange larger" href="https://weilin1205.github.io/2023/06/20/C++%20Tutorial/cpp-vector/"   title="向量(vector)"><i class="far fa-hand-point-right"></i><span>向量(vector)</span></a><a class="btn-beautify orange larger" href="https://weilin1205.github.io/2023/06/20/C++%20Tutorial/cpp-stack/"   title="堆疊(stack)"><i class="far fa-hand-point-right"></i><span>堆疊(stack)</span></a><a class="btn-beautify orange larger" href="https://weilin1205.github.io/2023/06/20/C++%20Tutorial/cpp-queue/"   title="佇列(queue)"><i class="far fa-hand-point-right"></i><span>佇列(queue)</span></a><a class="btn-beautify orange larger" href="https://weilin1205.github.io/2023/06/11/C++%20Tutorial/cpp-template/"   title="模板(template)"><i class="far fa-hand-point-right"></i><span>模板(template)</span></a> --><h1>關於CPE(Collegiate Programming Examination)</h1><h2 id="簡介">簡介</h2><ul><li><strong><a href="https://cpe.cse.nsysu.edu.tw/environment.php">大學程式能力檢定(CPE)官網連結</a>。</strong></li><li><strong>CPE題目主要來自<a href="https://onlinejudge.org/">UVA Online Judge</a>。</strong></li><li><strong>CPE考題總共有7題，而其中至少有一題選自一顆星選集(共49題)，通常會在第一題或是第二題。</strong></li><li><strong>CPE每年會辦理4次考試，考前須自行上網報名。</strong></li><li><strong>報名網址：<a href="https://cpe.cse.nsysu.edu.tw/cpe/">https://cpe.cse.nsysu.edu.tw/cpe/</a> 。</strong></li></ul><h2 id="考試流程">考試流程</h2><ol><li>報到時間：17:30~17:40。完成報到後將發予<strong>紙本「考生注意事項」</strong> 一份及 <strong>「PC編號紙條」</strong> 一張。</li><li>進行考試環境測試：17:40~18:30。(確定電腦狀況以及熟悉系統)</li><li>休息與準備：18:30~18:40。(可在此期間去上廁所)</li><li><strong>正式考試：18:40~21:40。(約3小時)</strong></li><li>19:00 開始查驗考生證件。(將身分證明文件置於桌上即可)</li><li>考生於 19:40 後，始得離場不再考試。(也就是提前交卷)</li><li>考生離場前，請完成填寫「線上考生問卷」，並向監考人員繳交紙本「考生注意事項」及「PC編號紙條」，即可離場。</li></ol><ul><li>考生於 18:00 後，不得入場。</li><li>手機不得攜帶進考場，手機應關機後，置於自己的書包內。</li><li><strong>試場內僅能攜帶 身分證明文件、筆、紙本考生注意事項、PC編號紙條</strong> ，其餘物品皆應放置於書包內，並將書包放置於教室前後或外面。</li></ul><h2 id="應試建議與備註">應試建議與備註</h2><ul><li><strong>應試物品：學生證、筆。(非大專學生，請出示貼有相片之身份證、健保卡或駕照)</strong></li><li><strong>紙本「考生注意事項」的背面可做為解題草稿使用，考場不供應其他白紙。</strong></li><li><strong>考題中比較簡單的三道題會被編排為前三題。</strong></li><li><strong>建議考生通過「人工公開測試資料」之後，再進行「正式評判」</strong></li><li><strong>考試使用的系統為<a href="http://coding-frenzy.arping.me/">「瘋狂程設系統」</a>，考生可以先辦帳號在此練習。</strong></li></ul><p>資料來源：<a href="https://cpe.cse.nsysu.edu.tw/environment.php">大學程式能力檢定(CPE)官網</a></p>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-11321 Sort! Sort!! And Sort!!!</title>
      <link href="/posts/UVa-11321-Sort!-Sort!!-And-Sort!!!.html"/>
      <url>/posts/UVa-11321-Sort!-Sort!!-And-Sort!!!.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/113/11321.pdf">https://onlinejudge.org/external/113/11321.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><ul><li>輸入測資檔包含 20 筆的輸入測資。每組測資一開始包含兩個整數 N, M。(0 ≦ N,M ≦ 10000)</li><li>接下來的N行裡每一行只包含一個整數。這些整數保證都可以被存在32-bit有號整處理。輸入N=0,M=0時表示結束，同時也一起輸出0 0。</li><li>先利用每個數字除以M的餘數由小到大排，並遵守以下規則：<ul><li>若排序中比較的兩數為一奇一偶且兩數除以M 的餘數相等，則奇數要排在偶數前面。</li><li>若兩奇數除以M餘數大小相等，則原本數值較大的奇數排在前面。</li><li>若兩偶數除以M餘數大小相等，則較小的偶數排在前面。</li></ul></li><li>負數的餘數計算和C語言裡的定義相同，即負數的餘數絕對不會大於零。例如：-100 MOD 3 = -1, -100 MOD 4 = 0 依此類推。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>可以善用algorithm函式庫的sort函式的第三參數去做判斷。</li><li>判斷依據為：<ul><li>一奇一偶，奇數前 偶數後</li><li>兩奇數，大奇前</li><li>兩偶數，小偶前</li></ul></li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11321.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol113/11321.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/11321"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a%m!=b%m) <span class="keyword">return</span> a%m&lt;b%m; <span class="comment">//餘數不同，餘數小的前 大的後</span></span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="comment">//餘數相同</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(a%<span class="number">2</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(b%<span class="number">2</span>)) <span class="keyword">return</span> a&gt;b; <span class="comment">//a奇b奇，大奇數排前面</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//a奇b偶，所以位置要互換</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(b%<span class="number">2</span>)) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//a偶b奇數，所以位置不用換</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> a&lt;b; <span class="comment">//a偶b偶，小偶數排前面</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//一奇一偶，奇數前 偶數後</span></span><br><span class="line">        <span class="comment">//兩奇數，大奇前</span></span><br><span class="line">        <span class="comment">//兩偶數，小偶前</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>) &#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>; &#125;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="type">int</span> A[<span class="number">10005</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            cin&gt;&gt;A[i]; &#125;</span><br><span class="line">        <span class="built_in">sort</span>(A,A+n,cmp); <span class="comment">//對數組A的0~n-1元素進行cmp排序</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            cout&lt;&lt;A[i]&lt;&lt;<span class="string">&quot;\n&quot;</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> CPE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVa-10409 Die Game</title>
      <link href="/posts/UVa-10409-Die-Game.html"/>
      <url>/posts/UVa-10409-Die-Game.html</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>題目鏈結：<a href="https://onlinejudge.org/external/104/10409.pdf">https://onlinejudge.org/external/104/10409.pdf</a></p></div><h2 id="題目概要-Problem-Summary">題目概要 - Problem Summary</h2><ul><li>桌上有一顆骰子，並在一開始保持初始狀態：頂面為1點,北面為2點,西面為3點。</li><li>解出另外三個面的規則為：任何一對相對的面的數字總和始終為7。</li><li>您的程式應接受一系列指令，指令為東&quot;east&quot;，南&quot;south&quot;，西&quot;west&quot;，北&quot;north&quot;。<ul><li>例如&quot;north&quot;指令將骰子向下滾動到北，即頂面變為新的北，北變為新的底，依此類推。</li></ul></li><li>執行完所有指令後，程式應顯示最終位於頂面的數字。</li></ul><h2 id="解題思路-Solution-Approach">解題思路 - Solution Approach</h2><ul><li>根據規則，我們可以看出初始的各面對應點數分別為：上1,下6,北2,南5,西3,東4</li><li>模擬滾動的結果後，我們可以看出規律：<ul><li>向北轉，東西面不會動到；只要把底、北、頂、南面兩兩交換一輪即可</li><li>向南轉，東西面不會動到；只要把底、南、頂、北面兩兩交換一輪即可</li><li>向西轉，南北面不會動到；只要把底、西、頂、東面兩兩交換一輪即可</li><li>向東轉，南北面不會動到；只要把底、東、頂、西面兩兩交換一輪即可</li></ul></li></ul><h2 id="範例輸入與輸出-Sample-Input-and-Output">範例輸入與輸出 - Sample Input and Output</h2><div class="note primary flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol104/10409.in">Sample Input</a></strong></p></div><div class="note default flat"><p><strong><a href="https://github.com/weilin1205/UVaSolutions/blob/main/UVaTestData/vol104/10409.out">Sample Output</a></strong></p></div><a class="btn-beautify orange larger" href="https://www.diffnow.com/compare-clips"   title="快速線上比對程式"><i class="far fa-hand-point-right"></i><span>快速線上比對程式</span></a><a class="btn-beautify red larger" href="https://www.udebug.com/UVa/10409"   title="uDebug快速連結"><i class="far fa-hand-point-right"></i><span>uDebug快速連結</span></a><h2 id="參考程式碼-Reference-Code">參考程式碼 - Reference Code</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string cmd;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n) &#123;  </span><br><span class="line">        <span class="comment">//起始面：上1,下6,北2,南5,西3,東4</span></span><br><span class="line">        <span class="type">int</span> top=<span class="number">1</span>,bottom=<span class="number">6</span>;</span><br><span class="line">        <span class="type">int</span> north=<span class="number">2</span>,south=<span class="number">5</span>;</span><br><span class="line">        <span class="type">int</span> west=<span class="number">3</span>,east=<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">            cin&gt;&gt;cmd;</span><br><span class="line">            <span class="keyword">if</span>(cmd==<span class="string">&quot;north&quot;</span>) &#123; <span class="comment">//向北轉，東西面不會動到</span></span><br><span class="line">                <span class="built_in">swap</span>(bottom,north);</span><br><span class="line">                <span class="built_in">swap</span>(north,top);</span><br><span class="line">                <span class="built_in">swap</span>(top,south);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(cmd==<span class="string">&quot;south&quot;</span>) &#123; <span class="comment">//向南轉，東西面不會動到</span></span><br><span class="line">                <span class="built_in">swap</span>(bottom,south);</span><br><span class="line">                <span class="built_in">swap</span>(south,top);</span><br><span class="line">                <span class="built_in">swap</span>(top,north);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(cmd==<span class="string">&quot;west&quot;</span>) &#123; <span class="comment">//向西轉，南北面不會動到</span></span><br><span class="line">                <span class="built_in">swap</span>(bottom,west);</span><br><span class="line">                <span class="built_in">swap</span>(west,top);</span><br><span class="line">                <span class="built_in">swap</span>(top,east);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(cmd==<span class="string">&quot;east&quot;</span>) &#123; <span class="comment">//向東轉，南北面不會動到</span></span><br><span class="line">                <span class="built_in">swap</span>(bottom,east);</span><br><span class="line">                <span class="built_in">swap</span>(east,top);</span><br><span class="line">                <span class="built_in">swap</span>(top,west);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//output</span></span><br><span class="line">        cout&lt;&lt;top&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UVa </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UVa </tag>
            
            <tag> CPE </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
